/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 681.0, "minX": 0.0, "maxY": 24099.0, "series": [{"data": [[0.0, 681.0], [0.1, 695.0], [0.2, 697.0], [0.3, 699.0], [0.4, 700.0], [0.5, 701.0], [0.6, 701.0], [0.7, 702.0], [0.8, 703.0], [0.9, 703.0], [1.0, 704.0], [1.1, 704.0], [1.2, 705.0], [1.3, 705.0], [1.4, 705.0], [1.5, 706.0], [1.6, 706.0], [1.7, 706.0], [1.8, 707.0], [1.9, 707.0], [2.0, 707.0], [2.1, 708.0], [2.2, 708.0], [2.3, 708.0], [2.4, 708.0], [2.5, 709.0], [2.6, 709.0], [2.7, 709.0], [2.8, 709.0], [2.9, 710.0], [3.0, 710.0], [3.1, 710.0], [3.2, 710.0], [3.3, 710.0], [3.4, 711.0], [3.5, 711.0], [3.6, 711.0], [3.7, 711.0], [3.8, 711.0], [3.9, 712.0], [4.0, 712.0], [4.1, 712.0], [4.2, 712.0], [4.3, 712.0], [4.4, 713.0], [4.5, 713.0], [4.6, 713.0], [4.7, 713.0], [4.8, 713.0], [4.9, 714.0], [5.0, 714.0], [5.1, 714.0], [5.2, 714.0], [5.3, 714.0], [5.4, 714.0], [5.5, 715.0], [5.6, 715.0], [5.7, 715.0], [5.8, 715.0], [5.9, 715.0], [6.0, 715.0], [6.1, 716.0], [6.2, 716.0], [6.3, 716.0], [6.4, 716.0], [6.5, 716.0], [6.6, 716.0], [6.7, 716.0], [6.8, 717.0], [6.9, 717.0], [7.0, 717.0], [7.1, 717.0], [7.2, 717.0], [7.3, 717.0], [7.4, 718.0], [7.5, 718.0], [7.6, 718.0], [7.7, 718.0], [7.8, 718.0], [7.9, 718.0], [8.0, 719.0], [8.1, 719.0], [8.2, 719.0], [8.3, 719.0], [8.4, 719.0], [8.5, 719.0], [8.6, 719.0], [8.7, 720.0], [8.8, 720.0], [8.9, 720.0], [9.0, 720.0], [9.1, 720.0], [9.2, 720.0], [9.3, 720.0], [9.4, 721.0], [9.5, 721.0], [9.6, 721.0], [9.7, 721.0], [9.8, 721.0], [9.9, 721.0], [10.0, 722.0], [10.1, 722.0], [10.2, 722.0], [10.3, 722.0], [10.4, 722.0], [10.5, 722.0], [10.6, 722.0], [10.7, 723.0], [10.8, 723.0], [10.9, 723.0], [11.0, 723.0], [11.1, 723.0], [11.2, 723.0], [11.3, 724.0], [11.4, 724.0], [11.5, 724.0], [11.6, 724.0], [11.7, 724.0], [11.8, 724.0], [11.9, 725.0], [12.0, 725.0], [12.1, 725.0], [12.2, 725.0], [12.3, 725.0], [12.4, 725.0], [12.5, 725.0], [12.6, 726.0], [12.7, 726.0], [12.8, 726.0], [12.9, 726.0], [13.0, 726.0], [13.1, 726.0], [13.2, 727.0], [13.3, 727.0], [13.4, 727.0], [13.5, 727.0], [13.6, 727.0], [13.7, 727.0], [13.8, 728.0], [13.9, 728.0], [14.0, 728.0], [14.1, 728.0], [14.2, 728.0], [14.3, 728.0], [14.4, 729.0], [14.5, 729.0], [14.6, 729.0], [14.7, 729.0], [14.8, 729.0], [14.9, 730.0], [15.0, 730.0], [15.1, 730.0], [15.2, 730.0], [15.3, 730.0], [15.4, 730.0], [15.5, 731.0], [15.6, 731.0], [15.7, 731.0], [15.8, 731.0], [15.9, 731.0], [16.0, 732.0], [16.1, 732.0], [16.2, 732.0], [16.3, 732.0], [16.4, 732.0], [16.5, 733.0], [16.6, 733.0], [16.7, 733.0], [16.8, 733.0], [16.9, 733.0], [17.0, 734.0], [17.1, 734.0], [17.2, 734.0], [17.3, 734.0], [17.4, 734.0], [17.5, 735.0], [17.6, 735.0], [17.7, 735.0], [17.8, 735.0], [17.9, 735.0], [18.0, 736.0], [18.1, 736.0], [18.2, 736.0], [18.3, 736.0], [18.4, 737.0], [18.5, 737.0], [18.6, 737.0], [18.7, 737.0], [18.8, 738.0], [18.9, 738.0], [19.0, 738.0], [19.1, 738.0], [19.2, 739.0], [19.3, 739.0], [19.4, 739.0], [19.5, 739.0], [19.6, 740.0], [19.7, 740.0], [19.8, 740.0], [19.9, 740.0], [20.0, 741.0], [20.1, 741.0], [20.2, 741.0], [20.3, 741.0], [20.4, 742.0], [20.5, 742.0], [20.6, 742.0], [20.7, 742.0], [20.8, 743.0], [20.9, 743.0], [21.0, 743.0], [21.1, 744.0], [21.2, 744.0], [21.3, 744.0], [21.4, 744.0], [21.5, 745.0], [21.6, 745.0], [21.7, 745.0], [21.8, 746.0], [21.9, 746.0], [22.0, 746.0], [22.1, 746.0], [22.2, 747.0], [22.3, 747.0], [22.4, 747.0], [22.5, 748.0], [22.6, 748.0], [22.7, 748.0], [22.8, 749.0], [22.9, 749.0], [23.0, 749.0], [23.1, 750.0], [23.2, 750.0], [23.3, 750.0], [23.4, 751.0], [23.5, 751.0], [23.6, 751.0], [23.7, 752.0], [23.8, 752.0], [23.9, 752.0], [24.0, 753.0], [24.1, 753.0], [24.2, 754.0], [24.3, 754.0], [24.4, 754.0], [24.5, 755.0], [24.6, 755.0], [24.7, 755.0], [24.8, 756.0], [24.9, 756.0], [25.0, 756.0], [25.1, 757.0], [25.2, 757.0], [25.3, 758.0], [25.4, 758.0], [25.5, 758.0], [25.6, 759.0], [25.7, 759.0], [25.8, 759.0], [25.9, 760.0], [26.0, 760.0], [26.1, 761.0], [26.2, 761.0], [26.3, 761.0], [26.4, 762.0], [26.5, 762.0], [26.6, 763.0], [26.7, 763.0], [26.8, 763.0], [26.9, 764.0], [27.0, 764.0], [27.1, 765.0], [27.2, 765.0], [27.3, 765.0], [27.4, 766.0], [27.5, 766.0], [27.6, 767.0], [27.7, 767.0], [27.8, 767.0], [27.9, 768.0], [28.0, 768.0], [28.1, 769.0], [28.2, 769.0], [28.3, 769.0], [28.4, 770.0], [28.5, 770.0], [28.6, 771.0], [28.7, 771.0], [28.8, 772.0], [28.9, 772.0], [29.0, 772.0], [29.1, 773.0], [29.2, 773.0], [29.3, 774.0], [29.4, 774.0], [29.5, 775.0], [29.6, 775.0], [29.7, 775.0], [29.8, 776.0], [29.9, 776.0], [30.0, 777.0], [30.1, 777.0], [30.2, 778.0], [30.3, 778.0], [30.4, 778.0], [30.5, 779.0], [30.6, 779.0], [30.7, 780.0], [30.8, 780.0], [30.9, 781.0], [31.0, 781.0], [31.1, 782.0], [31.2, 782.0], [31.3, 783.0], [31.4, 783.0], [31.5, 784.0], [31.6, 784.0], [31.7, 785.0], [31.8, 785.0], [31.9, 786.0], [32.0, 786.0], [32.1, 787.0], [32.2, 787.0], [32.3, 787.0], [32.4, 788.0], [32.5, 788.0], [32.6, 789.0], [32.7, 790.0], [32.8, 790.0], [32.9, 791.0], [33.0, 791.0], [33.1, 792.0], [33.2, 792.0], [33.3, 793.0], [33.4, 793.0], [33.5, 794.0], [33.6, 794.0], [33.7, 795.0], [33.8, 796.0], [33.9, 796.0], [34.0, 797.0], [34.1, 797.0], [34.2, 798.0], [34.3, 799.0], [34.4, 799.0], [34.5, 800.0], [34.6, 801.0], [34.7, 801.0], [34.8, 802.0], [34.9, 802.0], [35.0, 803.0], [35.1, 804.0], [35.2, 804.0], [35.3, 805.0], [35.4, 805.0], [35.5, 806.0], [35.6, 807.0], [35.7, 808.0], [35.8, 808.0], [35.9, 809.0], [36.0, 809.0], [36.1, 810.0], [36.2, 811.0], [36.3, 811.0], [36.4, 812.0], [36.5, 813.0], [36.6, 813.0], [36.7, 814.0], [36.8, 815.0], [36.9, 815.0], [37.0, 816.0], [37.1, 817.0], [37.2, 817.0], [37.3, 818.0], [37.4, 819.0], [37.5, 819.0], [37.6, 820.0], [37.7, 821.0], [37.8, 822.0], [37.9, 822.0], [38.0, 823.0], [38.1, 824.0], [38.2, 824.0], [38.3, 825.0], [38.4, 826.0], [38.5, 826.0], [38.6, 827.0], [38.7, 828.0], [38.8, 828.0], [38.9, 829.0], [39.0, 830.0], [39.1, 830.0], [39.2, 831.0], [39.3, 832.0], [39.4, 833.0], [39.5, 833.0], [39.6, 834.0], [39.7, 835.0], [39.8, 835.0], [39.9, 836.0], [40.0, 837.0], [40.1, 838.0], [40.2, 838.0], [40.3, 839.0], [40.4, 840.0], [40.5, 841.0], [40.6, 841.0], [40.7, 842.0], [40.8, 843.0], [40.9, 844.0], [41.0, 844.0], [41.1, 845.0], [41.2, 846.0], [41.3, 847.0], [41.4, 848.0], [41.5, 848.0], [41.6, 849.0], [41.7, 850.0], [41.8, 851.0], [41.9, 852.0], [42.0, 853.0], [42.1, 854.0], [42.2, 855.0], [42.3, 855.0], [42.4, 856.0], [42.5, 857.0], [42.6, 858.0], [42.7, 859.0], [42.8, 860.0], [42.9, 861.0], [43.0, 862.0], [43.1, 863.0], [43.2, 864.0], [43.3, 865.0], [43.4, 866.0], [43.5, 867.0], [43.6, 868.0], [43.7, 869.0], [43.8, 871.0], [43.9, 872.0], [44.0, 873.0], [44.1, 874.0], [44.2, 875.0], [44.3, 876.0], [44.4, 877.0], [44.5, 878.0], [44.6, 879.0], [44.7, 880.0], [44.8, 882.0], [44.9, 883.0], [45.0, 884.0], [45.1, 885.0], [45.2, 886.0], [45.3, 888.0], [45.4, 889.0], [45.5, 891.0], [45.6, 892.0], [45.7, 893.0], [45.8, 895.0], [45.9, 896.0], [46.0, 898.0], [46.1, 899.0], [46.2, 900.0], [46.3, 902.0], [46.4, 903.0], [46.5, 905.0], [46.6, 907.0], [46.7, 908.0], [46.8, 910.0], [46.9, 911.0], [47.0, 913.0], [47.1, 915.0], [47.2, 916.0], [47.3, 918.0], [47.4, 920.0], [47.5, 922.0], [47.6, 923.0], [47.7, 925.0], [47.8, 927.0], [47.9, 929.0], [48.0, 931.0], [48.1, 933.0], [48.2, 935.0], [48.3, 937.0], [48.4, 939.0], [48.5, 941.0], [48.6, 943.0], [48.7, 945.0], [48.8, 947.0], [48.9, 949.0], [49.0, 952.0], [49.1, 954.0], [49.2, 956.0], [49.3, 959.0], [49.4, 961.0], [49.5, 964.0], [49.6, 966.0], [49.7, 968.0], [49.8, 971.0], [49.9, 973.0], [50.0, 976.0], [50.1, 979.0], [50.2, 981.0], [50.3, 984.0], [50.4, 987.0], [50.5, 990.0], [50.6, 993.0], [50.7, 996.0], [50.8, 999.0], [50.9, 1003.0], [51.0, 1006.0], [51.1, 1009.0], [51.2, 1012.0], [51.3, 1015.0], [51.4, 1018.0], [51.5, 1021.0], [51.6, 1024.0], [51.7, 1027.0], [51.8, 1030.0], [51.9, 1033.0], [52.0, 1036.0], [52.1, 1040.0], [52.2, 1043.0], [52.3, 1047.0], [52.4, 1051.0], [52.5, 1056.0], [52.6, 1060.0], [52.7, 1065.0], [52.8, 1070.0], [52.9, 1075.0], [53.0, 1080.0], [53.1, 1086.0], [53.2, 1093.0], [53.3, 1099.0], [53.4, 1105.0], [53.5, 1112.0], [53.6, 1119.0], [53.7, 1127.0], [53.8, 1135.0], [53.9, 1144.0], [54.0, 1153.0], [54.1, 1161.0], [54.2, 1172.0], [54.3, 1183.0], [54.4, 1194.0], [54.5, 1206.0], [54.6, 1218.0], [54.7, 1231.0], [54.8, 1244.0], [54.9, 1258.0], [55.0, 1269.0], [55.1, 1275.0], [55.2, 1279.0], [55.3, 1282.0], [55.4, 1285.0], [55.5, 1288.0], [55.6, 1291.0], [55.7, 1294.0], [55.8, 1297.0], [55.9, 1300.0], [56.0, 1304.0], [56.1, 1308.0], [56.2, 1312.0], [56.3, 1318.0], [56.4, 1324.0], [56.5, 1330.0], [56.6, 1337.0], [56.7, 1345.0], [56.8, 1355.0], [56.9, 1364.0], [57.0, 1375.0], [57.1, 1386.0], [57.2, 1397.0], [57.3, 1410.0], [57.4, 1423.0], [57.5, 1436.0], [57.6, 1448.0], [57.7, 1459.0], [57.8, 1472.0], [57.9, 1486.0], [58.0, 1503.0], [58.1, 1521.0], [58.2, 1541.0], [58.3, 1563.0], [58.4, 1588.0], [58.5, 1614.0], [58.6, 1640.0], [58.7, 1671.0], [58.8, 1699.0], [58.9, 1705.0], [59.0, 1708.0], [59.1, 1710.0], [59.2, 1711.0], [59.3, 1713.0], [59.4, 1714.0], [59.5, 1715.0], [59.6, 1716.0], [59.7, 1717.0], [59.8, 1718.0], [59.9, 1719.0], [60.0, 1719.0], [60.1, 1720.0], [60.2, 1721.0], [60.3, 1721.0], [60.4, 1722.0], [60.5, 1723.0], [60.6, 1723.0], [60.7, 1724.0], [60.8, 1725.0], [60.9, 1725.0], [61.0, 1726.0], [61.1, 1726.0], [61.2, 1727.0], [61.3, 1728.0], [61.4, 1728.0], [61.5, 1729.0], [61.6, 1729.0], [61.7, 1730.0], [61.8, 1731.0], [61.9, 1731.0], [62.0, 1732.0], [62.1, 1732.0], [62.2, 1733.0], [62.3, 1734.0], [62.4, 1734.0], [62.5, 1735.0], [62.6, 1736.0], [62.7, 1736.0], [62.8, 1737.0], [62.9, 1738.0], [63.0, 1738.0], [63.1, 1739.0], [63.2, 1740.0], [63.3, 1741.0], [63.4, 1741.0], [63.5, 1742.0], [63.6, 1743.0], [63.7, 1744.0], [63.8, 1744.0], [63.9, 1745.0], [64.0, 1746.0], [64.1, 1747.0], [64.2, 1748.0], [64.3, 1749.0], [64.4, 1750.0], [64.5, 1751.0], [64.6, 1752.0], [64.7, 1753.0], [64.8, 1754.0], [64.9, 1755.0], [65.0, 1757.0], [65.1, 1758.0], [65.2, 1759.0], [65.3, 1760.0], [65.4, 1762.0], [65.5, 1763.0], [65.6, 1764.0], [65.7, 1765.0], [65.8, 1767.0], [65.9, 1768.0], [66.0, 1769.0], [66.1, 1771.0], [66.2, 1772.0], [66.3, 1774.0], [66.4, 1775.0], [66.5, 1777.0], [66.6, 1778.0], [66.7, 1780.0], [66.8, 1782.0], [66.9, 1783.0], [67.0, 1785.0], [67.1, 1787.0], [67.2, 1789.0], [67.3, 1791.0], [67.4, 1792.0], [67.5, 1794.0], [67.6, 1796.0], [67.7, 1798.0], [67.8, 1800.0], [67.9, 1802.0], [68.0, 1804.0], [68.1, 1806.0], [68.2, 1808.0], [68.3, 1811.0], [68.4, 1813.0], [68.5, 1815.0], [68.6, 1818.0], [68.7, 1820.0], [68.8, 1823.0], [68.9, 1825.0], [69.0, 1828.0], [69.1, 1830.0], [69.2, 1833.0], [69.3, 1835.0], [69.4, 1838.0], [69.5, 1840.0], [69.6, 1843.0], [69.7, 1845.0], [69.8, 1848.0], [69.9, 1851.0], [70.0, 1854.0], [70.1, 1857.0], [70.2, 1860.0], [70.3, 1863.0], [70.4, 1866.0], [70.5, 1870.0], [70.6, 1874.0], [70.7, 1877.0], [70.8, 1881.0], [70.9, 1885.0], [71.0, 1890.0], [71.1, 1894.0], [71.2, 1898.0], [71.3, 1903.0], [71.4, 1908.0], [71.5, 1913.0], [71.6, 1919.0], [71.7, 1925.0], [71.8, 1931.0], [71.9, 1938.0], [72.0, 1945.0], [72.1, 1952.0], [72.2, 1960.0], [72.3, 1968.0], [72.4, 1978.0], [72.5, 1987.0], [72.6, 1997.0], [72.7, 2008.0], [72.8, 2018.0], [72.9, 2028.0], [73.0, 2038.0], [73.1, 2048.0], [73.2, 2062.0], [73.3, 2077.0], [73.4, 2094.0], [73.5, 2113.0], [73.6, 2134.0], [73.7, 2158.0], [73.8, 2185.0], [73.9, 2218.0], [74.0, 2253.0], [74.1, 2282.0], [74.2, 2297.0], [74.3, 2311.0], [74.4, 2328.0], [74.5, 2350.0], [74.6, 2377.0], [74.7, 2408.0], [74.8, 2444.0], [74.9, 2478.0], [75.0, 2519.0], [75.1, 2568.0], [75.2, 2624.0], [75.3, 2698.0], [75.4, 2730.0], [75.5, 2743.0], [75.6, 2761.0], [75.7, 2787.0], [75.8, 2825.0], [75.9, 2873.0], [76.0, 2943.0], [76.1, 3031.0], [76.2, 3149.0], [76.3, 3315.0], [76.4, 3508.0], [76.5, 3708.0], [76.6, 3714.0], [76.7, 3718.0], [76.8, 3720.0], [76.9, 3722.0], [77.0, 3724.0], [77.1, 3726.0], [77.2, 3727.0], [77.3, 3729.0], [77.4, 3730.0], [77.5, 3731.0], [77.6, 3733.0], [77.7, 3734.0], [77.8, 3735.0], [77.9, 3737.0], [78.0, 3738.0], [78.1, 3739.0], [78.2, 3740.0], [78.3, 3742.0], [78.4, 3743.0], [78.5, 3744.0], [78.6, 3746.0], [78.7, 3747.0], [78.8, 3749.0], [78.9, 3751.0], [79.0, 3753.0], [79.1, 3755.0], [79.2, 3757.0], [79.3, 3759.0], [79.4, 3761.0], [79.5, 3763.0], [79.6, 3766.0], [79.7, 3769.0], [79.8, 3772.0], [79.9, 3774.0], [80.0, 3778.0], [80.1, 3780.0], [80.2, 3784.0], [80.3, 3787.0], [80.4, 3791.0], [80.5, 3794.0], [80.6, 3798.0], [80.7, 3802.0], [80.8, 3806.0], [80.9, 3810.0], [81.0, 3814.0], [81.1, 3818.0], [81.2, 3823.0], [81.3, 3828.0], [81.4, 3833.0], [81.5, 3838.0], [81.6, 3843.0], [81.7, 3849.0], [81.8, 3854.0], [81.9, 3860.0], [82.0, 3866.0], [82.1, 3873.0], [82.2, 3879.0], [82.3, 3887.0], [82.4, 3897.0], [82.5, 3906.0], [82.6, 3916.0], [82.7, 3927.0], [82.8, 3940.0], [82.9, 3954.0], [83.0, 3971.0], [83.1, 3989.0], [83.2, 4008.0], [83.3, 4032.0], [83.4, 4056.0], [83.5, 4086.0], [83.6, 4123.0], [83.7, 4176.0], [83.8, 4248.0], [83.9, 4302.0], [84.0, 4333.0], [84.1, 4394.0], [84.2, 4482.0], [84.3, 4590.0], [84.4, 4729.0], [84.5, 4753.0], [84.6, 4796.0], [84.7, 4880.0], [84.8, 5045.0], [84.9, 5349.0], [85.0, 5862.0], [85.1, 7488.0], [85.2, 7721.0], [85.3, 7726.0], [85.4, 7730.0], [85.5, 7732.0], [85.6, 7734.0], [85.7, 7737.0], [85.8, 7739.0], [85.9, 7741.0], [86.0, 7742.0], [86.1, 7744.0], [86.2, 7746.0], [86.3, 7748.0], [86.4, 7750.0], [86.5, 7752.0], [86.6, 7754.0], [86.7, 7756.0], [86.8, 7758.0], [86.9, 7761.0], [87.0, 7764.0], [87.1, 7766.0], [87.2, 7769.0], [87.3, 7772.0], [87.4, 7776.0], [87.5, 7780.0], [87.6, 7783.0], [87.7, 7787.0], [87.8, 7791.0], [87.9, 7796.0], [88.0, 7800.0], [88.1, 7805.0], [88.2, 7810.0], [88.3, 7816.0], [88.4, 7822.0], [88.5, 7828.0], [88.6, 7835.0], [88.7, 7842.0], [88.8, 7849.0], [88.9, 7856.0], [89.0, 7863.0], [89.1, 7870.0], [89.2, 7878.0], [89.3, 7888.0], [89.4, 7897.0], [89.5, 7908.0], [89.6, 7921.0], [89.7, 7934.0], [89.8, 7950.0], [89.9, 7969.0], [90.0, 7990.0], [90.1, 8015.0], [90.2, 8039.0], [90.3, 8070.0], [90.4, 8109.0], [90.5, 8173.0], [90.6, 8262.0], [90.7, 8324.0], [90.8, 8387.0], [90.9, 8496.0], [91.0, 8672.0], [91.1, 8764.0], [91.2, 8840.0], [91.3, 9030.0], [91.4, 9627.0], [91.5, 15718.0], [91.6, 15732.0], [91.7, 15737.0], [91.8, 15741.0], [91.9, 15744.0], [92.0, 15747.0], [92.1, 15750.0], [92.2, 15752.0], [92.3, 15755.0], [92.4, 15758.0], [92.5, 15760.0], [92.6, 15763.0], [92.7, 15767.0], [92.8, 15770.0], [92.9, 15774.0], [93.0, 15778.0], [93.1, 15783.0], [93.2, 15788.0], [93.3, 15794.0], [93.4, 15800.0], [93.5, 15806.0], [93.6, 15812.0], [93.7, 15821.0], [93.8, 15829.0], [93.9, 15838.0], [94.0, 15848.0], [94.1, 15858.0], [94.2, 15868.0], [94.3, 15881.0], [94.4, 15894.0], [94.5, 15909.0], [94.6, 15928.0], [94.7, 15950.0], [94.8, 15973.0], [94.9, 16006.0], [95.0, 16047.0], [95.1, 16103.0], [95.2, 16202.0], [95.3, 16332.0], [95.4, 16464.0], [95.5, 16737.0], [95.6, 16828.0], [95.7, 17472.0], [95.8, 21014.0], [95.9, 21019.0], [96.0, 21021.0], [96.1, 21023.0], [96.2, 21025.0], [96.3, 21026.0], [96.4, 21027.0], [96.5, 21028.0], [96.6, 21028.0], [96.7, 21029.0], [96.8, 21030.0], [96.9, 21031.0], [97.0, 21032.0], [97.1, 21032.0], [97.2, 21033.0], [97.3, 21033.0], [97.4, 21034.0], [97.5, 21035.0], [97.6, 21035.0], [97.7, 21036.0], [97.8, 21037.0], [97.9, 21037.0], [98.0, 21038.0], [98.1, 21038.0], [98.2, 21039.0], [98.3, 21040.0], [98.4, 21040.0], [98.5, 21041.0], [98.6, 21041.0], [98.7, 21042.0], [98.8, 21043.0], [98.9, 21043.0], [99.0, 21044.0], [99.1, 21045.0], [99.2, 21046.0], [99.3, 21047.0], [99.4, 21048.0], [99.5, 21050.0], [99.6, 21051.0], [99.7, 21052.0], [99.8, 21054.0], [99.9, 21057.0]], "isOverall": false, "label": "1.1 - POST - /confirmation.php", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 600.0, "maxY": 113568.0, "series": [{"data": [[600.0, 1239.0], [700.0, 113568.0], [800.0, 39025.0], [900.0, 15542.0], [1000.0, 8376.0], [1100.0, 3773.0], [1200.0, 4758.0], [1300.0, 4478.0], [1400.0, 2551.0], [1500.0, 1561.0], [1600.0, 1177.0], [1700.0, 29943.0], [1800.0, 11505.0], [1900.0, 4626.0], [2000.0, 2686.0], [2100.0, 1384.0], [2300.0, 1517.0], [2200.0, 1259.0], [2400.0, 931.0], [2500.0, 688.0], [2600.0, 469.0], [2700.0, 1459.0], [2800.0, 665.0], [2900.0, 426.0], [3000.0, 324.0], [3100.0, 231.0], [3300.0, 197.0], [3200.0, 192.0], [3400.0, 158.0], [3500.0, 122.0], [3700.0, 13909.0], [3600.0, 127.0], [3800.0, 5954.0], [3900.0, 2418.0], [4000.0, 1287.0], [4300.0, 716.0], [4200.0, 519.0], [4100.0, 645.0], [4600.0, 200.0], [4400.0, 390.0], [4500.0, 278.0], [4700.0, 791.0], [4800.0, 374.0], [4900.0, 203.0], [5100.0, 106.0], [5000.0, 156.0], [5300.0, 98.0], [5200.0, 90.0], [5500.0, 66.0], [5400.0, 85.0], [5600.0, 54.0], [5700.0, 61.0], [5800.0, 45.0], [6000.0, 23.0], [6100.0, 34.0], [5900.0, 34.0], [6300.0, 17.0], [6200.0, 19.0], [6500.0, 11.0], [6600.0, 14.0], [6400.0, 13.0], [6700.0, 62.0], [6800.0, 25.0], [6900.0, 13.0], [7000.0, 11.0], [7100.0, 14.0], [7300.0, 15.0], [7200.0, 4.0], [7400.0, 9.0], [7500.0, 18.0], [7600.0, 4.0], [7700.0, 9583.0], [7900.0, 2067.0], [7800.0, 4797.0], [8000.0, 1124.0], [8100.0, 523.0], [8700.0, 489.0], [8300.0, 582.0], [8200.0, 355.0], [8400.0, 296.0], [8500.0, 203.0], [8600.0, 148.0], [8900.0, 146.0], [8800.0, 298.0], [9000.0, 95.0], [9200.0, 56.0], [9100.0, 63.0], [9400.0, 43.0], [9700.0, 27.0], [9500.0, 48.0], [9300.0, 50.0], [9600.0, 35.0], [10100.0, 11.0], [9900.0, 17.0], [9800.0, 14.0], [10200.0, 9.0], [10000.0, 22.0], [10700.0, 28.0], [10500.0, 6.0], [10400.0, 3.0], [10300.0, 8.0], [10600.0, 5.0], [10900.0, 9.0], [10800.0, 20.0], [11000.0, 4.0], [11200.0, 9.0], [11100.0, 5.0], [11400.0, 3.0], [11300.0, 7.0], [11600.0, 6.0], [11700.0, 5.0], [11500.0, 3.0], [11900.0, 2.0], [11800.0, 4.0], [12000.0, 4.0], [12200.0, 5.0], [12100.0, 3.0], [12300.0, 5.0], [12700.0, 7.0], [12400.0, 2.0], [12600.0, 6.0], [12500.0, 3.0], [13000.0, 3.0], [12900.0, 4.0], [12800.0, 1.0], [13200.0, 2.0], [13100.0, 3.0], [13600.0, 1.0], [13400.0, 3.0], [13700.0, 1.0], [13500.0, 1.0], [14800.0, 3.0], [14700.0, 2.0], [14900.0, 1.0], [15800.0, 3464.0], [15700.0, 6351.0], [15900.0, 1486.0], [16000.0, 711.0], [16100.0, 343.0], [16200.0, 203.0], [16300.0, 317.0], [16400.0, 229.0], [16800.0, 169.0], [17000.0, 45.0], [17400.0, 30.0], [16600.0, 96.0], [17200.0, 32.0], [17600.0, 19.0], [18400.0, 4.0], [17800.0, 9.0], [18000.0, 4.0], [18200.0, 6.0], [18800.0, 10.0], [19000.0, 6.0], [19200.0, 2.0], [19400.0, 2.0], [20400.0, 2.0], [19800.0, 3.0], [20200.0, 2.0], [20000.0, 1.0], [19600.0, 1.0], [21000.0, 14134.0], [21400.0, 1.0], [20600.0, 3.0], [21600.0, 3.0], [22800.0, 1.0], [24000.0, 1.0], [17300.0, 35.0], [16500.0, 122.0], [16700.0, 289.0], [17100.0, 30.0], [16900.0, 83.0], [17500.0, 21.0], [18300.0, 5.0], [17700.0, 9.0], [18100.0, 2.0], [17900.0, 7.0], [18700.0, 20.0], [18900.0, 9.0], [19300.0, 2.0], [18500.0, 5.0], [19100.0, 2.0], [20300.0, 4.0], [19500.0, 2.0], [20100.0, 3.0], [19900.0, 3.0], [19700.0, 3.0], [20700.0, 3.0], [20900.0, 2.0], [21100.0, 2.0], [20500.0, 4.0], [21300.0, 1.0], [21900.0, 1.0], [22700.0, 2.0], [23100.0, 1.0], [22900.0, 2.0]], "isOverall": false, "label": "1.1 - POST - /confirmation.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14133.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 193329.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 193329.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 125932.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[3.0, 14133.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 93.65766738660905, "minX": 1.72754406E12, "maxY": 1283.9956136788237, "series": [{"data": [[1.72754562E12, 1283.6559283741944], [1.72754502E12, 1283.4030840400908], [1.72754532E12, 1283.592835724124], [1.72754442E12, 1283.9956136788237], [1.72754472E12, 1281.9032205858525], [1.72754574E12, 331.5602240896347], [1.72754412E12, 208.99849155269393], [1.72754514E12, 400.0], [1.72754544E12, 400.0], [1.72754454E12, 400.0], [1.72754484E12, 400.0], [1.72754424E12, 376.5702585810242], [1.72754526E12, 839.935101483883], [1.72754556E12, 842.3598848368492], [1.72754586E12, 99.08377659574474], [1.72754466E12, 831.4142781783033], [1.72754496E12, 839.8517084086412], [1.72754406E12, 93.65766738660905], [1.72754436E12, 832.9780268659392], [1.72754538E12, 540.2631819011119], [1.72754568E12, 540.1893687707654], [1.72754478E12, 538.2207985958745], [1.72754508E12, 546.8309599156106], [1.72754418E12, 303.0822586588068], [1.7275458E12, 163.19553338085046], [1.72754448E12, 543.8692489702886], [1.7275455E12, 400.0], [1.7275449E12, 400.0], [1.7275452E12, 400.0], [1.7275443E12, 400.0], [1.7275446E12, 400.0]], "isOverall": false, "label": "Teste Sinqia (SPIKE)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72754586E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 803.7857142857143, "minX": 1.0, "maxY": 9639.197183098593, "series": [{"data": [[2.0, 3761.0], [3.0, 3737.0], [4.0, 3730.0], [5.0, 1593.5], [6.0, 1544.5], [7.0, 1533.5], [8.0, 1191.5], [9.0, 1386.25], [10.0, 1127.5], [11.0, 1016.75], [13.0, 1394.8], [14.0, 1287.0], [15.0, 1288.4], [16.0, 1412.75], [17.0, 2124.0], [18.0, 1213.875], [19.0, 1131.8333333333333], [20.0, 1014.8333333333334], [21.0, 1112.3333333333333], [22.0, 1275.0], [23.0, 1097.5], [24.0, 1015.0000000000001], [25.0, 1012.4999999999999], [26.0, 952.8], [27.0, 1107.0], [28.0, 1007.2000000000002], [29.0, 1280.1428571428573], [30.0, 1357.4], [31.0, 1039.8461538461538], [32.0, 1103.1818181818182], [33.0, 1042.142857142857], [34.0, 952.6249999999999], [35.0, 1132.4545454545455], [36.0, 1111.6666666666667], [37.0, 1068.0], [38.0, 1050.6666666666667], [39.0, 1009.9285714285712], [40.0, 1244.416666666667], [41.0, 1096.6666666666667], [42.0, 986.9999999999999], [43.0, 1348.5714285714284], [44.0, 1137.214285714286], [45.0, 1077.2727272727273], [46.0, 1117.5833333333333], [47.0, 1034.2666666666667], [48.0, 925.1333333333333], [49.0, 1035.909090909091], [50.0, 1010.4444444444445], [51.0, 1140.4285714285716], [52.0, 999.4000000000001], [53.0, 985.1666666666667], [54.0, 1061.6363636363637], [55.0, 1019.7500000000001], [56.0, 1311.6363636363637], [57.0, 1140.3571428571431], [58.0, 1028.4374999999998], [59.0, 1034.9411764705883], [60.0, 1060.071428571429], [61.0, 1081.5], [62.0, 1049.857142857143], [63.0, 1253.25], [64.0, 1011.0769230769231], [65.0, 870.5945945945947], [66.0, 1067.2000000000003], [67.0, 1066.653846153846], [68.0, 1063.4375], [69.0, 1063.8235294117646], [70.0, 1082.7619047619048], [71.0, 1036.4545454545453], [72.0, 1071.310344827586], [73.0, 1040.235294117647], [74.0, 1124.8571428571427], [75.0, 1055.0555555555554], [76.0, 1130.8333333333335], [77.0, 1119.5], [78.0, 1117.9642857142858], [79.0, 1211.8571428571431], [80.0, 1034.375], [81.0, 803.7857142857143], [82.0, 1065.1538461538462], [83.0, 995.9473684210525], [84.0, 1134.0937500000002], [85.0, 976.857142857143], [86.0, 935.0714285714286], [87.0, 1094.3636363636365], [88.0, 1182.4736842105267], [89.0, 1330.441176470588], [90.0, 960.7619047619046], [91.0, 1160.0000000000002], [92.0, 1067.818181818182], [93.0, 986.391304347826], [94.0, 1018.9230769230769], [95.0, 917.6666666666667], [96.0, 1068.2333333333333], [97.0, 1124.84], [98.0, 976.5999999999999], [99.0, 1022.4210526315788], [100.0, 885.7522204096423], [101.0, 924.4659442724464], [102.0, 1020.2524461839531], [103.0, 992.9411764705884], [104.0, 833.2282608695652], [105.0, 1002.0480769230767], [106.0, 898.2820512820516], [107.0, 921.5294117647057], [108.0, 852.1052631578948], [109.0, 955.0693069306926], [110.0, 1292.9062500000005], [111.0, 966.9333333333329], [112.0, 952.684210526316], [113.0, 891.5915492957744], [114.0, 1055.961538461538], [115.0, 951.7326732673267], [116.0, 976.7021276595746], [117.0, 839.2987012987012], [118.0, 1180.4262295081971], [119.0, 952.6372549019607], [120.0, 1125.388059701492], [121.0, 1127.1111111111113], [122.0, 1041.1025641025642], [123.0, 1064.8499999999997], [124.0, 872.3333333333335], [125.0, 951.3999999999997], [126.0, 964.6770833333331], [127.0, 1266.3181818181815], [128.0, 1195.9854014598536], [129.0, 1017.1742424242418], [130.0, 995.159420289855], [131.0, 1137.1649484536083], [132.0, 994.8676470588235], [133.0, 856.4342105263158], [134.0, 946.482142857143], [135.0, 965.7520661157026], [136.0, 1193.704918032787], [137.0, 1011.116129032258], [138.0, 976.8227848101266], [139.0, 849.0156249999998], [140.0, 1222.5298507462694], [141.0, 1006.4204545454547], [142.0, 1197.5731707317075], [143.0, 1006.3557692307695], [144.0, 965.9500000000005], [145.0, 1125.5185185185185], [146.0, 985.7622950819677], [147.0, 1013.4607843137258], [148.0, 999.3289473684213], [149.0, 1110.5918367346942], [150.0, 1038.9552238805966], [151.0, 974.142857142857], [152.0, 1139.3750000000005], [153.0, 1035.5251141552515], [154.0, 946.2647058823526], [155.0, 1114.9603524229071], [156.0, 982.2268041237111], [157.0, 1276.057142857143], [158.0, 1114.134020618557], [159.0, 1095.5336322869953], [160.0, 1101.6507936507933], [161.0, 963.7094017094018], [162.0, 966.5730337078649], [163.0, 1046.8805970149256], [164.0, 1228.0], [165.0, 1119.2816901408453], [166.0, 1000.8367346938779], [167.0, 1117.1387283236986], [168.0, 1082.4444444444446], [169.0, 952.1515151515149], [170.0, 999.9999999999998], [171.0, 1060.0306122448983], [172.0, 1133.1353383458643], [173.0, 1309.5164835164833], [174.0, 1112.6865671641795], [175.0, 1206.8600000000001], [176.0, 1064.3999999999999], [177.0, 986.5970149253734], [178.0, 1240.0000000000005], [179.0, 991.766666666667], [180.0, 1199.3555555555556], [181.0, 1137.0775193798445], [182.0, 1376.7968749999995], [183.0, 1143.3962264150944], [184.0, 1084.4390243902435], [185.0, 1238.6197183098595], [186.0, 1257.4596774193544], [187.0, 1027.4268292682927], [188.0, 1196.5979381443303], [189.0, 916.6406249999998], [190.0, 1127.3097345132742], [191.0, 1023.9080459770117], [192.0, 993.1803278688524], [193.0, 1131.4794520547944], [194.0, 1145.7590361445782], [195.0, 1012.157303370786], [196.0, 1027.6515151515152], [197.0, 1031.074074074074], [198.0, 1206.1547619047615], [199.0, 1104.9999999999995], [200.0, 1167.207317073171], [201.0, 1162.2191780821918], [202.0, 1022.3589743589744], [203.0, 1293.3586497890296], [204.0, 1129.4767441860467], [205.0, 1184.826530612245], [206.0, 1057.6271186440686], [207.0, 1094.0505050505046], [208.0, 899.3199999999997], [209.0, 1282.8592592592595], [210.0, 990.6071428571433], [211.0, 1044.5660377358486], [212.0, 1056.9919354838714], [213.0, 1178.8529411764705], [214.0, 1165.132352941176], [215.0, 1123.5540540540542], [216.0, 1160.7608695652173], [217.0, 1230.45652173913], [218.0, 964.6250000000002], [219.0, 1008.6617647058822], [220.0, 1246.0880829015546], [221.0, 1428.207920792079], [222.0, 1253.2686567164178], [223.0, 1466.146496815287], [224.0, 1146.3809523809527], [225.0, 1345.0329670329675], [226.0, 1533.903703703704], [227.0, 1234.5433070866147], [228.0, 1121.398058252428], [229.0, 1420.4074074074076], [230.0, 1192.960000000001], [231.0, 1547.5322580645159], [232.0, 1414.2673267326738], [233.0, 1434.2356687898093], [234.0, 1143.9940476190475], [235.0, 1262.6748466257666], [236.0, 1303.4526315789476], [237.0, 1189.595238095238], [238.0, 1229.2871287128714], [239.0, 1324.6293103448272], [240.0, 1023.0420168067226], [241.0, 1212.0855263157898], [242.0, 1683.1750000000009], [243.0, 1406.9040000000002], [244.0, 1212.5307692307692], [245.0, 1116.0361445783133], [246.0, 1194.3734939759036], [247.0, 1425.423076923077], [248.0, 1103.2837837837835], [249.0, 1629.5483870967741], [250.0, 1577.9703703703703], [251.0, 1583.0189573459713], [252.0, 1317.764397905759], [253.0, 1242.672597864768], [254.0, 1284.7528735632188], [255.0, 1586.6438356164385], [257.0, 1193.1762452107266], [256.0, 1437.07100591716], [258.0, 1364.1794871794868], [259.0, 1233.6956521739128], [260.0, 1770.8838709677416], [261.0, 1323.5675675675677], [262.0, 1591.751773049645], [263.0, 1502.24647887324], [264.0, 1428.4146341463404], [270.0, 1485.88], [271.0, 1534.1366459627336], [268.0, 1314.12101910828], [269.0, 1730.3674698795178], [265.0, 1454.2750000000012], [266.0, 1198.2455089820362], [267.0, 1601.7857142857147], [273.0, 1372.0583657587551], [272.0, 1489.162790697675], [274.0, 1302.6063348416287], [275.0, 1330.9277108433737], [276.0, 1552.4144144144136], [277.0, 1357.9217877094977], [278.0, 1451.928961748634], [279.0, 2153.7404580152674], [280.0, 1520.4212598425192], [286.0, 1235.946428571429], [287.0, 1504.1885714285713], [284.0, 1351.5570175438593], [285.0, 1862.705128205129], [281.0, 1640.0], [282.0, 1216.1198347107427], [283.0, 1376.4999999999995], [289.0, 1529.596273291925], [288.0, 1346.371069182391], [290.0, 1419.0400000000002], [291.0, 1437.1971153846157], [292.0, 1691.8072289156626], [293.0, 1377.0248447204972], [294.0, 2504.36224489796], [295.0, 1400.3609022556386], [296.0, 1744.053333333333], [302.0, 1538.267295597484], [303.0, 1558.124277456647], [300.0, 1650.0755395683452], [301.0, 1384.0], [297.0, 1803.322147651006], [298.0, 1618.5511111111116], [299.0, 1423.5033112582778], [305.0, 1362.0191082802553], [304.0, 1481.6312056737593], [306.0, 1963.8044444444438], [307.0, 2028.4799999999993], [308.0, 1642.408888888888], [309.0, 1489.2677595628413], [310.0, 1700.2709923664113], [311.0, 2062.572327044026], [312.0, 1690.4952153110048], [318.0, 1144.9565217391305], [319.0, 1840.637305699482], [316.0, 1545.106918238994], [317.0, 1641.2829268292692], [313.0, 1810.3529411764703], [314.0, 1245.3133802816903], [315.0, 2131.1792114695327], [321.0, 1710.2513368983957], [320.0, 1439.0297029702958], [322.0, 1525.6249999999986], [323.0, 1782.9923076923071], [324.0, 1931.8197424892705], [325.0, 1779.7525423728825], [326.0, 1835.5568862275445], [327.0, 1886.7240000000008], [328.0, 2029.4224598930468], [334.0, 2286.0131578947376], [335.0, 2068.5274725274726], [332.0, 2127.204301075269], [333.0, 1537.941798941799], [329.0, 1499.885931558936], [330.0, 1531.1022364217245], [331.0, 1967.0778443113772], [337.0, 2140.3349999999987], [336.0, 1385.2014925373137], [338.0, 1856.019736842105], [339.0, 1979.3986710963463], [340.0, 1560.6502732240435], [341.0, 1776.07570977918], [342.0, 1519.450160771704], [343.0, 1457.375634517767], [344.0, 1782.5243362831843], [350.0, 1605.1578947368423], [351.0, 2139.5668202764978], [348.0, 1696.4450867052024], [349.0, 1885.3019271948613], [345.0, 1591.97385620915], [346.0, 1825.2435064935057], [347.0, 2227.955497382198], [353.0, 1789.0705882352945], [352.0, 2523.12865497076], [354.0, 2394.722222222222], [355.0, 1622.4725609756088], [356.0, 1814.6630136986294], [357.0, 1952.8533333333335], [358.0, 1578.562499999999], [359.0, 1962.0384615384612], [360.0, 1571.3821656050961], [366.0, 2011.3619631901838], [367.0, 2205.7833333333338], [364.0, 1486.672316384181], [365.0, 2659.952879581153], [361.0, 2454.301369863014], [362.0, 2064.266009852217], [363.0, 2243.484375], [369.0, 2155.2897959183674], [368.0, 2215.863309352522], [370.0, 2307.4082840236706], [371.0, 1750.3165322580649], [372.0, 2064.097902097904], [373.0, 1884.5910852713191], [374.0, 1325.9441340782118], [375.0, 2532.0066225165565], [376.0, 2000.5655430711608], [382.0, 2020.3731343283594], [383.0, 2560.1403162055344], [380.0, 2088.087167070217], [381.0, 2124.630303030303], [377.0, 1968.7368421052636], [378.0, 1687.0312500000002], [379.0, 2090.1666666666674], [385.0, 2057.653658536586], [384.0, 2148.3861386138606], [386.0, 2229.602362204724], [387.0, 1625.6355140186918], [388.0, 1822.8292682926833], [389.0, 2276.212765957447], [390.0, 1895.2784810126582], [391.0, 2298.6578947368407], [392.0, 2040.3763440860207], [398.0, 2555.296296296297], [399.0, 1728.7656250000007], [396.0, 2157.3727598566306], [397.0, 2094.3817034700332], [393.0, 2137.470198675497], [394.0, 2136.466257668712], [395.0, 2006.7422096317252], [401.0, 2200.2742241925275], [400.0, 2168.7201096066415], [402.0, 2512.1975088967984], [403.0, 2258.031880977683], [404.0, 2095.779569892475], [405.0, 2352.0607375271147], [406.0, 2290.509578544062], [407.0, 3715.5353535353515], [408.0, 2190.116370808678], [414.0, 2801.7857142857124], [415.0, 3580.5223880597023], [412.0, 1977.4896551724148], [413.0, 2672.5822784810125], [409.0, 2796.9115646258488], [410.0, 2300.2320441988936], [411.0, 3094.8073394495405], [417.0, 2364.767857142856], [416.0, 2391.0445344129553], [418.0, 3860.4320987654337], [419.0, 2472.511764705881], [420.0, 2482.997134670487], [421.0, 2103.5714285714275], [422.0, 2913.4381443298967], [423.0, 3641.3534482758614], [424.0, 2620.138888888889], [430.0, 2536.8516746411487], [431.0, 2491.234375000001], [428.0, 2026.7489177489183], [429.0, 3256.4476190476184], [425.0, 2510.8360215053754], [426.0, 2464.1411764705867], [427.0, 4385.9140625], [433.0, 3149.0160427807473], [432.0, 3225.7965367965357], [434.0, 2928.7117117117114], [435.0, 2676.941747572814], [436.0, 3117.5901639344256], [437.0, 2440.947368421054], [438.0, 2307.1956521739125], [439.0, 2394.430000000002], [440.0, 2936.926267281106], [446.0, 2769.2814814814806], [447.0, 2450.1887755102043], [444.0, 3261.2051282051284], [445.0, 2997.303921568628], [441.0, 2401.9414893617036], [442.0, 3422.60606060606], [443.0, 2771.834586466167], [449.0, 2990.1612903225814], [448.0, 2818.4883720930225], [450.0, 2496.285714285715], [451.0, 2748.225806451613], [452.0, 2739.4912280701756], [453.0, 2672.4675324675327], [454.0, 2694.957671957673], [455.0, 2870.4294478527595], [456.0, 3564.403846153846], [462.0, 2617.000000000001], [463.0, 4500.315217391303], [460.0, 2702.3008849557523], [461.0, 2519.4528301886785], [457.0, 2313.431818181818], [458.0, 4236.582417582418], [459.0, 3330.6126126126123], [465.0, 2573.0427350427353], [464.0, 3798.6835443037976], [466.0, 4290.1489361702115], [467.0, 2240.3764705882354], [468.0, 2886.499999999999], [469.0, 3418.7931034482754], [470.0, 3380.391304347825], [471.0, 3330.2073170731705], [472.0, 2330.285714285714], [478.0, 3499.2800000000007], [479.0, 2475.5480769230776], [476.0, 2551.2480620155034], [477.0, 3795.7547169811332], [473.0, 3693.042253521127], [474.0, 3559.7894736842104], [475.0, 2108.8585858585857], [481.0, 2220.0000000000005], [480.0, 3527.33962264151], [482.0, 4443.983606557375], [483.0, 3039.857142857142], [484.0, 2505.0454545454554], [485.0, 3224.3333333333326], [486.0, 3598.4859813084113], [487.0, 3814.3606557377047], [488.0, 3788.968253968254], [495.0, 2986.520547945205], [494.0, 3553.6241134751767], [492.0, 3458.929411764707], [493.0, 5964.41573033708], [489.0, 4227.368421052633], [490.0, 4847.524390243905], [491.0, 3883.093023255814], [497.0, 2820.7708333333335], [496.0, 3057.4750000000004], [498.0, 2346.0491803278683], [499.0, 3178.1789473684203], [500.0, 3269.69090909091], [501.0, 3407.5846153846146], [502.0, 4384.94], [503.0, 2889.3292682926835], [504.0, 3216.0754716981137], [510.0, 2723.571428571428], [511.0, 3144.000000000001], [508.0, 2841.483333333332], [509.0, 3229.847826086957], [505.0, 3600.2068965517237], [506.0, 4495.551282051282], [507.0, 3268.724137931035], [518.0, 2897.9154929577467], [513.0, 3579.676923076923], [512.0, 3082.749999999999], [526.0, 3370.7333333333327], [527.0, 3736.7999999999997], [524.0, 3882.836734693877], [525.0, 4528.950000000001], [522.0, 2360.60606060606], [523.0, 3689.164179104477], [514.0, 2444.38888888889], [515.0, 3657.158536585366], [516.0, 2277.1578947368434], [517.0, 3068.9594594594587], [519.0, 3100.8750000000005], [536.0, 3491.4307692307702], [537.0, 3719.225], [538.0, 4391.55223880597], [539.0, 2386.829268292684], [540.0, 3615.730769230769], [541.0, 4459.954545454545], [542.0, 2491.8705882352947], [543.0, 4697.571428571428], [528.0, 2743.2087912087904], [529.0, 2665.520833333334], [530.0, 4127.0], [531.0, 2736.9607843137255], [532.0, 4239.612903225807], [533.0, 4897.173913043478], [534.0, 4122.124999999999], [535.0, 3934.6615384615384], [520.0, 2708.086956521739], [521.0, 3132.9743589743593], [547.0, 2132.2962962962965], [544.0, 3093.2923076923075], [559.0, 3839.4181818181833], [557.0, 3267.1304347826085], [558.0, 2889.1249999999995], [555.0, 2567.360360360361], [556.0, 3517.222222222222], [545.0, 2287.424242424242], [546.0, 3641.196428571429], [548.0, 2585.050847457627], [549.0, 3005.9848484848485], [550.0, 2100.285714285715], [551.0, 2782.0000000000014], [560.0, 4180.426470588235], [574.0, 3140.304347826087], [575.0, 3876.8989898989903], [572.0, 3402.0], [573.0, 3099.2162162162153], [570.0, 4330.029411764706], [571.0, 3735.6818181818185], [568.0, 2054.94], [569.0, 3714.301886792453], [561.0, 2976.29268292683], [562.0, 2444.6891891891896], [563.0, 2947.2258064516122], [564.0, 3484.7941176470595], [565.0, 2401.0919540229884], [566.0, 3073.90909090909], [567.0, 3172.3287671232874], [552.0, 2468.306451612903], [553.0, 3037.0681818181815], [554.0, 3503.978260869567], [579.0, 3080.3571428571427], [576.0, 4669.967741935484], [590.0, 5700.753424657535], [591.0, 5529.285714285715], [588.0, 2837.2920353982313], [589.0, 3961.096153846155], [586.0, 3498.414634146342], [587.0, 1495.0000000000002], [577.0, 3591.6470588235293], [578.0, 3029.891891891892], [580.0, 3237.265306122449], [581.0, 3053.9696969696965], [582.0, 3249.6511627906975], [583.0, 4821.865384615387], [592.0, 3721.139534883721], [606.0, 2247.931034482758], [607.0, 5748.956521739128], [604.0, 4984.033898305083], [605.0, 4765.375], [602.0, 2007.6458333333337], [603.0, 2671.786885245903], [600.0, 3982.0161290322585], [601.0, 2792.0106382978715], [593.0, 4571.807692307692], [594.0, 2958.8732394366193], [595.0, 1990.9250000000002], [596.0, 2765.9242424242425], [597.0, 3663.3499999999995], [598.0, 3730.98275862069], [599.0, 3199.416666666667], [584.0, 2594.551020408163], [585.0, 4348.3166666666675], [611.0, 3923.8703703703704], [608.0, 4070.096774193549], [622.0, 2487.677966101695], [623.0, 2820.4210526315787], [620.0, 3351.971962616822], [621.0, 4674.460000000001], [618.0, 3829.847826086956], [619.0, 4006.0000000000014], [609.0, 2901.755102040817], [610.0, 2570.136363636363], [612.0, 2746.0638297872347], [613.0, 4260.411764705883], [614.0, 4079.6874999999995], [615.0, 2944.8947368421054], [624.0, 1637.5945945945946], [638.0, 4263.255813953487], [639.0, 2424.5423728813557], [636.0, 4705.507042253521], [637.0, 3887.659090909091], [634.0, 1948.228571428572], [635.0, 2368.1190476190477], [632.0, 2535.5945945945946], [633.0, 2956.2499999999995], [625.0, 3985.0588235294113], [626.0, 2323.469387755102], [627.0, 2788.923076923077], [628.0, 3771.27027027027], [629.0, 6419.942857142856], [630.0, 3922.5479452054806], [631.0, 3508.1666666666665], [616.0, 2771.1250000000005], [617.0, 5645.978260869567], [643.0, 2606.9736842105262], [640.0, 4243.081632653061], [654.0, 3921.731958762887], [655.0, 4113.753246753248], [652.0, 4701.548387096775], [653.0, 2115.74358974359], [650.0, 2734.484848484849], [651.0, 3652.4666666666667], [641.0, 3211.4590163934427], [642.0, 3261.8933333333334], [644.0, 4332.482758620689], [645.0, 3341.1132075471687], [646.0, 3966.5263157894724], [647.0, 4727.282352941179], [656.0, 3707.093023255815], [670.0, 2211.829268292683], [671.0, 3410.6976744186045], [668.0, 2299.2028985507236], [669.0, 3697.9180327868853], [666.0, 3877.3414634146343], [667.0, 3278.5937500000005], [664.0, 6026.586666666667], [665.0, 4398.949152542374], [657.0, 2330.816326530612], [658.0, 3596.22641509434], [659.0, 3141.2127659574467], [660.0, 2940.279279279279], [661.0, 3048.257575757577], [663.0, 2775.357142857142], [662.0, 3730.166666666669], [648.0, 3210.833333333333], [649.0, 2523.6551724137935], [675.0, 4009.9677419354844], [672.0, 4342.340000000001], [686.0, 2712.9523809523816], [687.0, 3083.97619047619], [684.0, 3263.263157894737], [685.0, 6444.769230769231], [682.0, 3395.0689655172405], [683.0, 5557.12765957447], [673.0, 3914.0217391304336], [674.0, 3445.857142857143], [676.0, 3228.7875000000004], [677.0, 3925.0000000000014], [678.0, 2628.5476190476193], [679.0, 2809.375], [688.0, 2423.901960784313], [702.0, 3347.1547619047633], [703.0, 2187.3888888888887], [698.0, 3153.7118644067805], [699.0, 3277.4000000000005], [700.0, 2976.6875], [701.0, 2841.6129032258054], [696.0, 5269.089285714284], [697.0, 2846.6842105263163], [689.0, 3067.740000000001], [690.0, 4425.583333333334], [691.0, 4941.314285714286], [692.0, 3934.446428571426], [693.0, 2450.468749999999], [694.0, 3901.7555555555546], [695.0, 2146.227272727273], [680.0, 3939.4444444444443], [681.0, 4229.493150684929], [710.0, 3308.907407407407], [705.0, 3333.099009900989], [704.0, 3653.538461538462], [719.0, 3447.0125000000003], [716.0, 3298.2972972972966], [717.0, 2558.6666666666674], [718.0, 2422.5538461538463], [714.0, 4145.955555555556], [715.0, 3052.7999999999993], [706.0, 5363.727272727273], [707.0, 4304.766666666667], [709.0, 3410.7058823529405], [708.0, 3423.8799999999997], [711.0, 4211.3908045977], [728.0, 3979.239436619718], [729.0, 3027.163934426229], [730.0, 3114.8793103448284], [731.0, 3678.978260869566], [732.0, 2006.315789473684], [733.0, 5332.617647058823], [734.0, 3202.2747252747263], [735.0, 3273.2352941176473], [720.0, 5458.672413793104], [721.0, 3603.338235294119], [722.0, 3656.30909090909], [723.0, 4738.061855670102], [724.0, 4247.820512820513], [725.0, 4038.807017543861], [726.0, 3880.169230769229], [727.0, 2957.9999999999995], [712.0, 5795.403508771929], [713.0, 3592.8431372549026], [742.0, 2616.2105263157896], [738.0, 4632.452830188679], [736.0, 3206.9651162790697], [737.0, 1975.7142857142858], [750.0, 5111.657894736842], [751.0, 3564.0784313725485], [748.0, 4970.10606060606], [749.0, 2980.6029411764707], [746.0, 2949.0153846153844], [747.0, 3216.3076923076924], [739.0, 3407.3076923076924], [740.0, 3203.932432432433], [741.0, 3575.644736842106], [743.0, 4725.475728155342], [760.0, 3032.6153846153843], [761.0, 3114.770833333334], [762.0, 4506.02380952381], [763.0, 3486.2476190476195], [764.0, 3482.080459770116], [765.0, 3469.7391304347825], [766.0, 3289.452380952381], [767.0, 3696.8253968253975], [752.0, 3160.607142857143], [753.0, 7232.949367088608], [754.0, 6848.80487804878], [755.0, 3843.9574468085107], [756.0, 3425.2470588235296], [757.0, 4189.553191489363], [758.0, 4023.1489361702124], [759.0, 3155.7547169811323], [744.0, 4020.796875], [745.0, 4982.55], [775.0, 4135.727272727274], [771.0, 4705.89285714286], [768.0, 2431.054545454545], [783.0, 5017.5666666666675], [781.0, 2566.784313725491], [780.0, 3248.2790697674427], [779.0, 4388.257575757577], [778.0, 2876.296296296296], [782.0, 5357.400000000001], [769.0, 2336.7931034482754], [770.0, 3560.337349397589], [772.0, 4908.321428571428], [773.0, 3913.605263157894], [774.0, 3042.3000000000006], [784.0, 4053.5747126436786], [798.0, 6455.106382978721], [799.0, 4942.952380952382], [796.0, 3771.9714285714285], [797.0, 4754.711111111113], [794.0, 2608.609195402299], [795.0, 3751.0851063829796], [792.0, 1899.1599999999996], [793.0, 3765.058823529412], [785.0, 2954.9692307692303], [786.0, 3235.7843137254904], [787.0, 5094.036363636364], [788.0, 3328.56862745098], [789.0, 3302.5857142857144], [790.0, 3666.329268292684], [791.0, 5372.951923076923], [776.0, 3730.3400000000015], [777.0, 2655.960784313726], [803.0, 3895.8000000000006], [800.0, 4305.722222222223], [814.0, 4424.322033898306], [815.0, 4545.974358974358], [812.0, 4102.2580645161315], [813.0, 3564.8399999999997], [810.0, 3955.2388059701498], [811.0, 2344.4186046511636], [801.0, 5266.32], [802.0, 3888.836065573771], [804.0, 4910.841269841268], [805.0, 5154.883116883119], [806.0, 4408.214285714285], [807.0, 3935.7746478873246], [816.0, 4520.714285714286], [817.0, 3110.046875], [831.0, 3803.890625], [828.0, 3132.342857142857], [829.0, 3409.368421052631], [830.0, 4950.573770491802], [826.0, 2863.8493150684935], [827.0, 2559.5263157894733], [824.0, 3290.384615384615], [825.0, 3545.176470588234], [818.0, 5584.883720930233], [819.0, 3675.714285714286], [820.0, 4228.931372549019], [821.0, 3853.071428571429], [822.0, 3335.43137254902], [823.0, 3768.123287671233], [808.0, 6154.388235294116], [809.0, 4271.839080459768], [835.0, 5780.705882352941], [832.0, 4333.80701754386], [847.0, 3862.400000000001], [846.0, 3479.213114754098], [844.0, 3568.4833333333336], [845.0, 4290.440677966102], [842.0, 3611.9199999999996], [843.0, 4945.245283018866], [833.0, 5994.346938775511], [834.0, 4439.380000000001], [836.0, 2782.769230769231], [837.0, 3745.872340425532], [838.0, 4117.525], [839.0, 2467.9310344827586], [848.0, 4020.40909090909], [863.0, 4317.797101449275], [861.0, 3768.157894736841], [862.0, 4915.512820512821], [859.0, 3850.157894736842], [858.0, 3436.9142857142856], [860.0, 4112.491228070176], [856.0, 3830.604166666667], [857.0, 4087.819672131148], [849.0, 3522.960784313726], [850.0, 3464.197183098592], [851.0, 3954.218181818183], [852.0, 4593.120481927712], [853.0, 3728.6860465116283], [854.0, 4280.860465116279], [855.0, 2568.450704225352], [840.0, 4669.2405063291135], [841.0, 4964.399999999999], [867.0, 5035.4705882352955], [864.0, 5672.784615384615], [878.0, 2934.9148936170213], [879.0, 5768.411764705882], [876.0, 4087.92857142857], [877.0, 2617.5890410958905], [874.0, 5118.627906976745], [875.0, 4264.964285714285], [865.0, 2548.2560975609754], [866.0, 3804.6382978723395], [868.0, 4366.094339622644], [869.0, 3093.295774647888], [870.0, 3557.672131147541], [871.0, 3233.517857142857], [880.0, 4053.3230769230768], [894.0, 3550.8923076923083], [895.0, 4443.730769230769], [892.0, 3947.600000000002], [893.0, 5170.245901639343], [890.0, 5042.979166666668], [889.0, 6323.804878048782], [888.0, 3867.0636363636363], [891.0, 4919.591836734694], [881.0, 3228.0196078431377], [882.0, 4336.954545454545], [883.0, 3202.243902439024], [884.0, 4161.6290322580635], [885.0, 7705.000000000002], [886.0, 4681.474999999998], [887.0, 2879.177215189873], [872.0, 4062.968253968254], [873.0, 3519.7073170731705], [899.0, 3746.315217391304], [896.0, 3803.6585365853643], [910.0, 3732.448275862071], [911.0, 4562.148148148148], [908.0, 5185.319444444445], [909.0, 3008.8979591836733], [906.0, 4830.795180722889], [907.0, 4045.48275862069], [897.0, 6143.0], [898.0, 3719.1571428571433], [900.0, 5098.304347826086], [901.0, 2994.868852459016], [902.0, 3097.0000000000005], [903.0, 4093.8354430379754], [912.0, 3334.108695652175], [926.0, 3312.679245283018], [927.0, 6235.7027027027025], [924.0, 3262.0750000000007], [925.0, 7153.872340425532], [922.0, 4014.436363636364], [923.0, 5030.651515151517], [920.0, 4534.945454545454], [921.0, 5081.899999999999], [913.0, 3406.5714285714284], [914.0, 5376.50819672131], [915.0, 4029.0124999999985], [918.0, 3580.900000000001], [917.0, 4698.382352941177], [916.0, 5097.266666666666], [919.0, 6362.589743589745], [904.0, 3560.0131578947376], [905.0, 4302.245283018868], [931.0, 5205.170731707318], [928.0, 5665.39024390244], [942.0, 4117.5090909090895], [943.0, 2986.4680851063827], [940.0, 2895.8545454545447], [941.0, 4169.032258064516], [938.0, 4546.78723404255], [939.0, 6506.584415584416], [929.0, 3754.907894736842], [930.0, 4511.574468085107], [932.0, 4476.27272727273], [933.0, 3104.2000000000007], [934.0, 3468.804347826087], [935.0, 4991.127272727272], [944.0, 2615.3396226415084], [958.0, 6381.470588235294], [959.0, 5122.121951219513], [956.0, 2831.547008547008], [957.0, 4489.011627906976], [954.0, 7697.820512820514], [955.0, 3763.54], [952.0, 5819.611111111111], [953.0, 5821.584415584416], [945.0, 4040.1728395061723], [946.0, 3125.518518518518], [947.0, 3592.4761904761917], [950.0, 7411.547619047619], [949.0, 4281.869565217391], [948.0, 3389.871794871795], [951.0, 4508.328125000002], [936.0, 6111.35593220339], [937.0, 4168.000000000001], [963.0, 6615.537634408604], [960.0, 5919.731707317072], [974.0, 2548.0147058823536], [975.0, 7387.727272727272], [972.0, 4478.072727272727], [973.0, 3452.9594594594587], [970.0, 4225.590361445782], [971.0, 5263.636363636364], [961.0, 5659.842105263158], [962.0, 4226.521739130436], [964.0, 5644.25641025641], [965.0, 5239.716666666668], [966.0, 4443.980392156862], [967.0, 3422.545454545454], [976.0, 3455.7021276595747], [990.0, 3692.4310344827595], [991.0, 3374.34375], [988.0, 5761.62962962963], [989.0, 4396.775700934578], [986.0, 3282.761904761904], [987.0, 4121.967741935485], [984.0, 4700.906249999997], [985.0, 4629.033898305085], [977.0, 4687.243902439023], [978.0, 3694.703703703704], [979.0, 9377.47058823529], [980.0, 6017.130434782609], [981.0, 5752.860000000001], [982.0, 3425.8117647058834], [983.0, 4882.9152542372885], [968.0, 4992.813953488374], [969.0, 5383.347826086957], [999.0, 5399.144578313252], [995.0, 3653.9807692307695], [992.0, 2819.813953488372], [993.0, 6880.750000000001], [994.0, 3866.250000000001], [1004.0, 4530.388888888889], [1005.0, 5817.90350877193], [1006.0, 3615.060606060607], [1007.0, 5040.705882352941], [996.0, 5238.547619047619], [997.0, 5147.2956521739125], [998.0, 6005.21052631579], [1008.0, 5471.260869565218], [1022.0, 5999.499999999999], [1023.0, 4458.714285714286], [1020.0, 5281.831168831168], [1021.0, 5151.5783132530105], [1018.0, 6339.464285714286], [1019.0, 5993.526315789473], [1016.0, 3806.220338983051], [1017.0, 4949.084507042252], [1009.0, 5734.552631578948], [1010.0, 5872.723404255319], [1011.0, 5947.809523809523], [1012.0, 4100.934426229507], [1013.0, 6370.148148148147], [1014.0, 4366.696078431373], [1015.0, 5396.599999999999], [1000.0, 6127.569767441858], [1001.0, 6266.384615384615], [1002.0, 5656.5294117647045], [1003.0, 3476.8243243243237], [1030.0, 5343.366197183097], [1024.0, 6355.0], [1052.0, 3200.244444444445], [1054.0, 4316.101265822786], [1048.0, 4244.120481927709], [1050.0, 3531.404255319149], [1044.0, 5689.885714285715], [1046.0, 4380.614285714285], [1026.0, 7333.762711864407], [1028.0, 5740.760000000001], [1032.0, 4422.1], [1034.0, 5007.809523809524], [1036.0, 4009.4], [1038.0, 3154.6500000000005], [1056.0, 4838.91304347826], [1084.0, 5206.108108108108], [1086.0, 5741.277777777779], [1080.0, 4255.174603174603], [1082.0, 3544.159420289854], [1076.0, 5504.948717948716], [1078.0, 6410.455284552845], [1072.0, 5449.693877551021], [1074.0, 7464.515151515154], [1058.0, 4654.8378378378375], [1060.0, 3530.684782608696], [1062.0, 6116.382716049381], [1064.0, 6644.973684210524], [1066.0, 5172.722222222223], [1068.0, 5220.951219512195], [1070.0, 4845.666666666666], [1040.0, 6581.793103448276], [1042.0, 8253.530612244898], [1094.0, 5283.738461538462], [1088.0, 5639.98924731183], [1116.0, 4267.988372093023], [1118.0, 3773.8484848484845], [1112.0, 5075.029702970297], [1114.0, 4675.170731707316], [1108.0, 6292.195652173911], [1110.0, 6118.0485436893205], [1090.0, 5585.393258426968], [1092.0, 5790.133333333333], [1096.0, 4152.671052631578], [1098.0, 5348.68253968254], [1100.0, 4742.4838709677415], [1102.0, 6155.884210526316], [1120.0, 7525.958333333334], [1148.0, 2903.641025641026], [1150.0, 7863.4], [1144.0, 4676.173076923076], [1146.0, 4194.361904761906], [1140.0, 5248.104761904761], [1142.0, 5315.460869565218], [1136.0, 6808.77083333333], [1138.0, 4963.634782608696], [1122.0, 6470.357142857143], [1124.0, 6376.692307692308], [1126.0, 4439.646464646466], [1128.0, 6854.152173913044], [1130.0, 8697.91379310345], [1132.0, 4884.3835616438355], [1134.0, 5427.133333333332], [1104.0, 5936.030769230771], [1106.0, 7008.035714285713], [1158.0, 9639.197183098593], [1152.0, 9596.543859649122], [1180.0, 7463.339999999999], [1182.0, 6530.36170212766], [1176.0, 4925.20430107527], [1178.0, 4473.934306569342], [1172.0, 5706.168539325841], [1174.0, 5705.842105263158], [1154.0, 4929.842105263159], [1156.0, 5150.4625], [1160.0, 3582.30612244898], [1162.0, 5983.177215189874], [1164.0, 4840.933333333332], [1166.0, 6613.459183673467], [1184.0, 8132.080000000001], [1212.0, 4421.308641975307], [1214.0, 6062.195402298849], [1208.0, 5295.515789473682], [1210.0, 6419.797752808988], [1204.0, 4017.6568627450965], [1206.0, 4064.2063492063494], [1200.0, 4077.1268656716416], [1202.0, 5804.0], [1186.0, 5167.64367816092], [1188.0, 7130.467391304349], [1190.0, 5804.986111111111], [1192.0, 4541.30612244898], [1194.0, 5387.433333333334], [1196.0, 5369.447368421052], [1198.0, 6849.5119047619055], [1168.0, 4443.261538461538], [1170.0, 3498.6944444444434], [1222.0, 5044.045801526719], [1216.0, 7132.611650485435], [1244.0, 4009.338235294119], [1246.0, 6813.017094017094], [1240.0, 6037.143999999999], [1242.0, 6756.9135802469145], [1236.0, 4902.139240506328], [1238.0, 3867.2111111111103], [1218.0, 4612.94495412844], [1220.0, 3787.1647058823537], [1224.0, 6951.842105263157], [1226.0, 5742.282608695653], [1228.0, 4925.404761904762], [1230.0, 6747.310734463279], [1248.0, 5338.530612244898], [1276.0, 6606.073394495409], [1278.0, 7514.579999999998], [1272.0, 7647.701923076924], [1274.0, 5700.292682926832], [1268.0, 6337.933333333337], [1270.0, 4737.9726027397255], [1264.0, 6255.475609756098], [1266.0, 7596.010989010989], [1250.0, 8548.176991150443], [1252.0, 7089.261904761905], [1254.0, 4323.9793814433], [1256.0, 5547.052631578949], [1258.0, 5644.622377622375], [1260.0, 6302.3061224489775], [1262.0, 5333.765217391307], [1232.0, 4264.012658227847], [1234.0, 6235.019607843139], [1282.0, 6601.666666666665], [1280.0, 3654.0], [1288.0, 5341.535211267606], [1286.0, 5472.468599033817], [1284.0, 6145.013513513514], [1290.0, 6438.376984126987], [1292.0, 4936.557291666666], [1294.0, 6906.369973190349], [1296.0, 4552.792792792794], [1298.0, 5883.725321888406], [1300.0, 6212.885892116249], [1037.0, 8974.022727272726], [1029.0, 3468.3454545454542], [1027.0, 6558.333333333334], [1025.0, 3608.324324324324], [1055.0, 4702.299999999999], [1053.0, 3690.5714285714284], [1049.0, 3930.5600000000004], [1051.0, 3034.95652173913], [1045.0, 4451.943820224718], [1047.0, 4813.718749999999], [1031.0, 4971.254545454546], [1033.0, 5374.906666666667], [1035.0, 6704.027397260275], [1039.0, 7280.386363636364], [1073.0, 7760.396226415093], [1075.0, 8202.928571428572], [1077.0, 5118.720930232557], [1079.0, 4777.369230769232], [1081.0, 3498.1159420289855], [1083.0, 3378.7558139534904], [1087.0, 5563.623188405797], [1085.0, 4536.35185185185], [1057.0, 4701.016949152541], [1059.0, 3315.4897959183677], [1061.0, 6403.590909090908], [1063.0, 4942.166666666667], [1065.0, 3692.146341463415], [1067.0, 3581.9819819819836], [1071.0, 6794.3799999999965], [1069.0, 5127.433333333333], [1041.0, 3742.5306122448974], [1043.0, 3571.6764705882347], [1099.0, 5517.773584905661], [1091.0, 7185.06329113924], [1089.0, 7843.779220779221], [1117.0, 3714.460000000001], [1119.0, 5069.290322580646], [1113.0, 5988.891304347826], [1115.0, 8233.492307692304], [1109.0, 5669.669902912623], [1111.0, 4346.714285714285], [1093.0, 6702.691176470588], [1095.0, 6240.539823008848], [1097.0, 4555.763157894738], [1103.0, 3412.0000000000005], [1101.0, 6802.0422535211255], [1137.0, 6123.215189873417], [1139.0, 4519.11510791367], [1141.0, 6255.156249999998], [1143.0, 6432.023529411763], [1145.0, 3733.064516129032], [1147.0, 6575.6296296296305], [1149.0, 3380.3333333333335], [1151.0, 7588.0989010989015], [1121.0, 6371.388235294118], [1123.0, 4727.095238095238], [1125.0, 5757.432098765431], [1127.0, 4488.481481481482], [1129.0, 5996.044117647059], [1131.0, 7066.467741935485], [1133.0, 6880.653061224487], [1135.0, 7857.403225806449], [1105.0, 7883.4268292682955], [1107.0, 5193.742857142857], [1159.0, 4572.635135135133], [1153.0, 6225.27777777778], [1181.0, 6300.989130434782], [1183.0, 4555.756756756758], [1177.0, 4720.5972222222235], [1179.0, 4002.6944444444443], [1173.0, 6238.299999999998], [1175.0, 3632.536585365854], [1155.0, 3859.3636363636356], [1157.0, 5251.354430379747], [1161.0, 3907.999999999999], [1163.0, 3611.060240963856], [1165.0, 6205.833333333334], [1167.0, 5149.511904761905], [1185.0, 5710.559633027519], [1213.0, 6142.908045977011], [1215.0, 6461.721649484534], [1209.0, 7916.3272727272715], [1211.0, 7620.978494623656], [1205.0, 3326.58695652174], [1207.0, 6671.521276595744], [1201.0, 5432.16923076923], [1203.0, 6485.614285714287], [1187.0, 6370.894308943089], [1189.0, 5391.8604651162805], [1191.0, 5904.835294117647], [1193.0, 4733.617283950615], [1195.0, 4281.441176470588], [1197.0, 6444.0], [1199.0, 4605.925925925926], [1169.0, 6676.801980198019], [1171.0, 5424.6], [1229.0, 5856.967741935483], [1219.0, 5115.185567010311], [1217.0, 5831.792452830189], [1245.0, 6627.135416666666], [1243.0, 7335.985915492958], [1247.0, 3811.6315789473697], [1239.0, 4524.8028169014115], [1241.0, 6067.342465753423], [1221.0, 4427.962264150942], [1223.0, 7484.333333333332], [1225.0, 6136.366336633661], [1227.0, 7715.073529411764], [1231.0, 4960.51], [1265.0, 5627.527777777779], [1267.0, 3793.9090909090914], [1269.0, 4191.602941176472], [1271.0, 5266.902173913046], [1273.0, 6199.209090909089], [1275.0, 5307.36206896552], [1277.0, 7833.174999999998], [1279.0, 5183.28787878788], [1249.0, 6749.955223880597], [1251.0, 6898.171597633138], [1253.0, 4304.8813559322], [1255.0, 5066.961165048541], [1257.0, 4838.04761904762], [1259.0, 5346.161290322583], [1261.0, 6828.037500000001], [1263.0, 5080.0], [1233.0, 4999.014492753622], [1235.0, 5784.523809523809], [1237.0, 4922.185185185185], [1285.0, 5522.335616438358], [1281.0, 5002.9846153846165], [1283.0, 5859.047619047618], [1287.0, 7606.380208333338], [1289.0, 5523.000000000001], [1291.0, 6521.494296577946], [1293.0, 7906.59541984733], [1295.0, 5563.822916666669], [1297.0, 5447.731884057966], [1299.0, 6973.462908011865], [1.0, 7734.0]], "isOverall": false, "label": "1.1 - POST - /confirmation.php", "isController": false}, {"data": [[638.313265985594, 3266.286015945059]], "isOverall": false, "label": "1.1 - POST - /confirmation.php-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 69174.35, "minX": 1.72754406E12, "maxY": 569255.1, "series": [{"data": [[1.72754562E12, 523996.1], [1.72754502E12, 569255.1], [1.72754532E12, 541289.15], [1.72754442E12, 539426.9333333333], [1.72754472E12, 541663.45], [1.72754574E12, 482798.4666666667], [1.72754412E12, 433499.86666666664], [1.72754514E12, 482017.2166666667], [1.72754544E12, 455272.25], [1.72754454E12, 479786.88333333336], [1.72754484E12, 486287.0], [1.72754424E12, 473966.4666666667], [1.72754526E12, 512587.0], [1.72754556E12, 500930.6666666667], [1.72754586E12, 229412.46666666667], [1.72754466E12, 496693.36666666664], [1.72754496E12, 507767.05], [1.72754406E12, 121045.66666666667], [1.72754436E12, 490713.06666666665], [1.72754538E12, 478910.26666666666], [1.72754568E12, 499491.15], [1.72754478E12, 497747.56666666665], [1.72754508E12, 497008.61666666664], [1.72754418E12, 473605.61666666664], [1.7275458E12, 367213.0], [1.72754448E12, 498391.11666666664], [1.7275455E12, 457015.55], [1.7275449E12, 486579.2166666667], [1.7275452E12, 487175.93333333335], [1.7275443E12, 474483.11666666664], [1.7275446E12, 478281.5833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72754562E12, 261119.05], [1.72754502E12, 275916.7833333333], [1.72754532E12, 268096.45], [1.72754442E12, 272193.88333333336], [1.72754472E12, 273351.35], [1.72754574E12, 273109.36666666664], [1.72754412E12, 247619.76666666666], [1.72754514E12, 272166.68333333335], [1.72754544E12, 258896.08333333334], [1.72754454E12, 270854.3333333333], [1.72754484E12, 273057.95], [1.72754424E12, 269457.9], [1.72754526E12, 273342.05], [1.72754556E12, 268762.61666666664], [1.72754586E12, 131078.75], [1.72754466E12, 272268.68333333335], [1.72754496E12, 272124.2], [1.72754406E12, 69174.35], [1.72754436E12, 270766.0333333333], [1.72754538E12, 263251.73333333334], [1.72754568E12, 273231.43333333335], [1.72754478E12, 270849.4666666667], [1.72754508E12, 271647.9666666667], [1.72754418E12, 269454.51666666666], [1.7275458E12, 209397.65], [1.72754448E12, 272043.76666666666], [1.7275455E12, 260191.51666666666], [1.7275449E12, 273389.48333333334], [1.7275452E12, 274661.1666666667], [1.7275443E12, 269041.51666666666], [1.7275446E12, 269474.61666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72754586E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 891.1738221884506, "minX": 1.72754406E12, "maxY": 6592.009036900668, "series": [{"data": [[1.72754562E12, 6592.009036900668], [1.72754502E12, 6140.999151888994], [1.72754532E12, 6383.288759218721], [1.72754442E12, 6363.094549589798], [1.72754472E12, 6297.372390354395], [1.72754574E12, 1883.5635673624215], [1.72754412E12, 1164.5140788415154], [1.72754514E12, 2160.503801593037], [1.72754544E12, 2293.7474379848654], [1.72754454E12, 2123.725454545461], [1.72754484E12, 2142.2205869155487], [1.72754424E12, 2000.3873194073765], [1.72754526E12, 3449.4362101313354], [1.72754556E12, 3502.73076251963], [1.72754586E12, 891.1738221884506], [1.72754466E12, 3598.2648144891746], [1.72754496E12, 3398.76753593252], [1.72754406E12, 1015.1342692584606], [1.72754436E12, 3560.301485632961], [1.72754538E12, 3533.5357598978308], [1.72754568E12, 3346.816751180278], [1.72754478E12, 3358.243001316372], [1.72754508E12, 3395.4512130801736], [1.72754418E12, 1596.8352984524631], [1.7275458E12, 1140.0049893086223], [1.72754448E12, 3367.040750153354], [1.7275455E12, 2254.9743394066495], [1.7275449E12, 2153.432953628127], [1.7275452E12, 2127.934371922285], [1.7275443E12, 2167.1008642883394], [1.7275446E12, 2153.8832816207287]], "isOverall": false, "label": "1.1 - POST - /confirmation.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72754586E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 291.9880319148939, "minX": 1.72754406E12, "maxY": 3403.4816830476893, "series": [{"data": [[1.72754562E12, 2940.131537109861], [1.72754502E12, 2519.414649190445], [1.72754532E12, 2939.7319069616565], [1.72754442E12, 3403.4816830476893], [1.72754472E12, 3347.850380320441], [1.72754574E12, 1032.3442667389559], [1.72754412E12, 494.2872083668566], [1.72754514E12, 1246.7379616220157], [1.72754544E12, 977.6848960827524], [1.72754454E12, 1191.4110909090894], [1.72754484E12, 1153.5295701337147], [1.72754424E12, 1194.4524707831094], [1.72754526E12, 1463.2936210131286], [1.72754556E12, 1422.6903681730923], [1.72754586E12, 291.9880319148939], [1.72754466E12, 2116.031826973804], [1.72754496E12, 1483.0499182373635], [1.72754406E12, 426.42584593232596], [1.72754436E12, 2172.715416777867], [1.72754538E12, 1749.4712643678179], [1.72754568E12, 1830.6077985661777], [1.72754478E12, 1748.6404563405013], [1.72754508E12, 1856.810302390989], [1.72754418E12, 812.5580324244668], [1.7275458E12, 478.0484675694941], [1.72754448E12, 1799.871878012447], [1.7275455E12, 958.6503863397893], [1.7275449E12, 1174.294465871376], [1.7275452E12, 1204.7712418300653], [1.7275443E12, 1326.549926443549], [1.7275446E12, 1204.9306442781508]], "isOverall": false, "label": "1.1 - POST - /confirmation.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72754586E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 103.30021598272154, "minX": 1.72754406E12, "maxY": 5618.133864024073, "series": [{"data": [[1.72754562E12, 5376.748807631169], [1.72754502E12, 5437.180030840405], [1.72754532E12, 5468.672015560417], [1.72754442E12, 5618.133864024073], [1.72754472E12, 5533.522333710938], [1.72754574E12, 1061.845486581725], [1.72754412E12, 266.9292035398231], [1.72754514E12, 1301.52796886314], [1.72754544E12, 887.3556172780367], [1.72754454E12, 1266.390818181816], [1.72754484E12, 1314.0992551377585], [1.72754424E12, 1106.5972209441402], [1.72754526E12, 2639.2086815623425], [1.72754556E12, 2498.1952538823894], [1.72754586E12, 132.46960486322212], [1.72754466E12, 2740.104097063485], [1.72754496E12, 2582.7789827007527], [1.72754406E12, 103.30021598272154], [1.72754436E12, 2700.281736500305], [1.72754538E12, 2329.608556832679], [1.72754568E12, 2531.9626682986523], [1.72754478E12, 2532.020886353662], [1.72754508E12, 2551.463783403673], [1.72754418E12, 709.1889277818694], [1.7275458E12, 340.8421240199563], [1.72754448E12, 2540.201735167828], [1.7275455E12, 857.4790613374059], [1.7275449E12, 1336.69208000717], [1.7275452E12, 1307.3032500671538], [1.7275443E12, 1250.4387642515594], [1.7275446E12, 1283.906552290565]], "isOverall": false, "label": "1.1 - POST - /confirmation.php", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72754586E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 681.0, "minX": 1.72754406E12, "maxY": 24099.0, "series": [{"data": [[1.72754562E12, 22931.0], [1.72754502E12, 18822.0], [1.72754532E12, 19312.0], [1.72754442E12, 17664.0], [1.72754472E12, 22774.0], [1.72754574E12, 16772.0], [1.72754412E12, 15827.0], [1.72754514E12, 17535.0], [1.72754544E12, 18942.0], [1.72754454E12, 16975.0], [1.72754484E12, 16952.0], [1.72754424E12, 18780.0], [1.72754526E12, 18993.0], [1.72754556E12, 18878.0], [1.72754586E12, 7813.0], [1.72754466E12, 18972.0], [1.72754496E12, 16997.0], [1.72754406E12, 7749.0], [1.72754436E12, 22784.0], [1.72754538E12, 24099.0], [1.72754568E12, 18893.0], [1.72754478E12, 18825.0], [1.72754508E12, 18835.0], [1.72754418E12, 18765.0], [1.7275458E12, 16063.0], [1.72754448E12, 23134.0], [1.7275455E12, 21428.0], [1.7275449E12, 18754.0], [1.7275452E12, 16945.0], [1.7275443E12, 18868.0], [1.7275446E12, 18956.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72754562E12, 15775.0], [1.72754502E12, 8707.599999999926], [1.72754532E12, 15782.0], [1.72754442E12, 15762.0], [1.72754472E12, 15767.0], [1.72754574E12, 3751.0], [1.72754412E12, 1808.5], [1.72754514E12, 3853.8999999999996], [1.72754544E12, 4211.0], [1.72754454E12, 3794.0], [1.72754484E12, 3775.300000000001], [1.72754424E12, 3836.0], [1.72754526E12, 4059.0], [1.72754556E12, 5073.200000000003], [1.72754586E12, 1718.0], [1.72754466E12, 7832.5], [1.72754496E12, 4815.300000000001], [1.72754406E12, 1341.0], [1.72754436E12, 7844.0], [1.72754538E12, 7877.4000000000015], [1.72754568E12, 7781.700000000001], [1.72754478E12, 7756.0], [1.72754508E12, 7761.0], [1.72754418E12, 3730.800000000001], [1.7275458E12, 1754.0], [1.72754448E12, 7757.0], [1.7275455E12, 4417.0], [1.7275449E12, 3795.0], [1.7275452E12, 3789.8999999999996], [1.7275443E12, 3912.5], [1.7275446E12, 3799.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72754562E12, 17459.81999999999], [1.72754502E12, 15983.19], [1.72754532E12, 16753.0], [1.72754442E12, 16059.68], [1.72754472E12, 16084.469999999994], [1.72754574E12, 15772.0], [1.72754412E12, 4410.349999999988], [1.72754514E12, 15794.0], [1.72754544E12, 15762.0], [1.72754454E12, 15790.22], [1.72754484E12, 15774.33], [1.72754424E12, 15781.0], [1.72754526E12, 15900.22], [1.72754556E12, 16043.239999999998], [1.72754586E12, 3735.3500000000004], [1.72754466E12, 15980.65], [1.72754496E12, 15836.71], [1.72754406E12, 3721.26], [1.72754436E12, 16013.0], [1.72754538E12, 16511.81], [1.72754568E12, 15911.0], [1.72754478E12, 15955.0], [1.72754508E12, 15904.699999999999], [1.72754418E12, 7919.0], [1.7275458E12, 7760.0], [1.72754448E12, 15903.74], [1.7275455E12, 15749.5], [1.7275449E12, 15769.2], [1.7275452E12, 15775.0], [1.7275443E12, 15807.0], [1.7275446E12, 15805.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72754562E12, 16159.65], [1.72754502E12, 15784.0], [1.72754532E12, 15973.65], [1.72754442E12, 15823.0], [1.72754472E12, 15871.0], [1.72754574E12, 7738.0], [1.72754412E12, 2719.25], [1.72754514E12, 7790.0], [1.72754544E12, 7783.1], [1.72754454E12, 7754.0], [1.72754484E12, 7745.0], [1.72754424E12, 7764.0], [1.72754526E12, 7916.0], [1.72754556E12, 8223.3], [1.72754586E12, 1752.0], [1.72754466E12, 15729.25], [1.72754496E12, 7898.549999999999], [1.72754406E12, 1760.0999999999995], [1.72754436E12, 15755.0], [1.72754538E12, 15753.35], [1.72754568E12, 15746.0], [1.72754478E12, 15745.1], [1.72754508E12, 15730.0], [1.72754418E12, 3871.0], [1.7275458E12, 2717.0], [1.72754448E12, 15739.0], [1.7275455E12, 7766.5], [1.7275449E12, 7751.0], [1.7275452E12, 7757.0], [1.7275443E12, 7792.0], [1.7275446E12, 7758.85]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72754562E12, 696.0], [1.72754502E12, 686.0], [1.72754532E12, 694.0], [1.72754442E12, 694.0], [1.72754472E12, 688.0], [1.72754574E12, 683.0], [1.72754412E12, 685.0], [1.72754514E12, 687.0], [1.72754544E12, 697.0], [1.72754454E12, 691.0], [1.72754484E12, 683.0], [1.72754424E12, 686.0], [1.72754526E12, 689.0], [1.72754556E12, 693.0], [1.72754586E12, 682.0], [1.72754466E12, 692.0], [1.72754496E12, 681.0], [1.72754406E12, 690.0], [1.72754436E12, 693.0], [1.72754538E12, 694.0], [1.72754568E12, 692.0], [1.72754478E12, 681.0], [1.72754508E12, 681.0], [1.72754418E12, 688.0], [1.7275458E12, 687.0], [1.72754448E12, 689.0], [1.7275455E12, 695.0], [1.7275449E12, 685.0], [1.7275452E12, 685.0], [1.7275443E12, 686.0], [1.7275446E12, 692.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72754562E12, 2083.5], [1.72754502E12, 1170.5], [1.72754532E12, 1775.0], [1.72754442E12, 1758.0], [1.72754472E12, 1777.0], [1.72754574E12, 807.0], [1.72754412E12, 805.0], [1.72754514E12, 849.5], [1.72754544E12, 1430.0], [1.72754454E12, 858.0], [1.72754484E12, 819.0], [1.72754424E12, 895.0], [1.72754526E12, 891.0], [1.72754556E12, 1209.0], [1.72754586E12, 731.0], [1.72754466E12, 1304.0], [1.72754496E12, 864.0], [1.72754406E12, 769.0], [1.72754436E12, 1021.0], [1.72754538E12, 1354.0], [1.72754568E12, 852.0], [1.72754478E12, 874.0], [1.72754508E12, 902.0], [1.72754418E12, 840.0], [1.7275458E12, 746.0], [1.72754448E12, 896.0], [1.7275455E12, 1379.0], [1.7275449E12, 821.0], [1.7275452E12, 815.0], [1.7275443E12, 926.0], [1.7275446E12, 875.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72754586E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 724.0, "minX": 1.0, "maxY": 21053.0, "series": [{"data": [[3.0, 3737.0], [7.0, 845.5], [12.0, 1297.5], [13.0, 1531.5], [16.0, 1282.0], [21.0, 1288.0], [25.0, 1290.0], [26.0, 1280.5], [28.0, 1280.0], [29.0, 1278.0], [35.0, 1280.0], [39.0, 1285.0], [43.0, 1274.0], [48.0, 812.0], [49.0, 1276.0], [52.0, 1279.0], [57.0, 1270.5], [59.0, 1269.0], [60.0, 1278.0], [65.0, 1277.0], [70.0, 752.0], [71.0, 1257.0], [73.0, 769.0], [79.0, 1065.0], [78.0, 758.0], [87.0, 739.0], [95.0, 727.0], [97.0, 740.5], [99.0, 725.0], [96.0, 724.0], [100.0, 734.0], [101.0, 735.5], [103.0, 726.0], [102.0, 734.5], [106.0, 739.0], [105.0, 736.0], [104.0, 725.0], [107.0, 728.5], [109.0, 734.0], [110.0, 731.0], [111.0, 731.0], [108.0, 731.0], [112.0, 740.5], [114.0, 739.0], [115.0, 736.0], [113.0, 735.0], [117.0, 735.5], [119.0, 737.0], [118.0, 727.0], [116.0, 724.0], [120.0, 730.0], [121.0, 755.0], [122.0, 748.0], [123.0, 733.5], [126.0, 773.0], [125.0, 740.0], [134.0, 769.0], [135.0, 778.0], [133.0, 833.0], [132.0, 1374.0], [130.0, 803.0], [128.0, 739.0], [129.0, 751.0], [136.0, 783.0], [140.0, 753.0], [142.0, 809.5], [138.0, 777.5], [141.0, 1099.5], [143.0, 828.5], [139.0, 828.5], [147.0, 917.5], [144.0, 985.5], [149.0, 800.0], [151.0, 897.0], [148.0, 877.0], [146.0, 964.0], [150.0, 892.0], [145.0, 902.0], [158.0, 849.0], [156.0, 857.0], [159.0, 979.0], [154.0, 1014.0], [152.0, 872.0], [155.0, 853.0], [157.0, 871.5], [153.0, 915.0], [163.0, 880.0], [161.0, 839.0], [164.0, 853.0], [166.0, 878.0], [162.0, 973.0], [165.0, 963.5], [160.0, 912.0], [167.0, 924.0], [174.0, 951.0], [172.0, 961.0], [171.0, 1019.0], [175.0, 964.0], [168.0, 969.0], [173.0, 934.0], [170.0, 868.0], [169.0, 953.0], [181.0, 858.0], [176.0, 900.0], [180.0, 1001.0], [177.0, 1018.5], [178.0, 948.0], [183.0, 927.5], [179.0, 999.5], [182.0, 995.0], [186.0, 1019.0], [188.0, 917.0], [184.0, 1078.0], [190.0, 928.5], [185.0, 903.5], [187.0, 989.0], [189.0, 880.0], [191.0, 1017.5], [194.0, 953.0], [199.0, 884.0], [197.0, 873.0], [198.0, 908.0], [192.0, 1041.0], [195.0, 1016.0], [193.0, 981.0], [196.0, 1029.0], [207.0, 949.0], [202.0, 953.0], [201.0, 933.5], [200.0, 1134.0], [203.0, 965.5], [204.0, 957.5], [206.0, 994.0], [205.0, 915.5], [208.0, 919.0], [211.0, 987.5], [209.0, 955.0], [210.0, 1077.0], [215.0, 1076.0], [212.0, 901.0], [214.0, 1021.0], [213.0, 1022.0], [217.0, 908.0], [218.0, 923.0], [216.0, 1007.5], [220.0, 1029.0], [223.0, 1315.0], [221.0, 1110.5], [222.0, 921.0], [219.0, 896.0], [227.0, 1048.0], [224.0, 1024.0], [230.0, 1718.0], [226.0, 1084.0], [231.0, 1727.5], [228.0, 947.0], [225.0, 1046.0], [238.0, 1027.0], [234.0, 1295.0], [233.0, 973.0], [237.0, 994.0], [232.0, 888.5], [236.0, 1414.0], [235.0, 888.0], [239.0, 1752.5], [240.0, 1711.0], [246.0, 1736.0], [242.0, 1720.0], [243.0, 1018.0], [241.0, 1728.0], [245.0, 1114.5], [248.0, 1935.5], [253.0, 1128.5], [251.0, 851.0], [249.0, 1835.5], [256.0, 955.0], [268.0, 1088.0], [261.0, 1388.0], [1.0, 4582.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[105.0, 21028.0], [109.0, 21046.0], [135.0, 21035.0], [134.0, 21053.0], [133.0, 21041.0], [132.0, 21034.0], [130.0, 21033.5], [139.0, 21049.5], [136.0, 21041.0], [143.0, 21049.0], [142.0, 21031.0], [151.0, 21041.0], [149.0, 21036.0], [147.0, 21041.0], [150.0, 21033.5], [145.0, 21044.0], [148.0, 21028.0], [146.0, 21035.0], [144.0, 21042.0], [158.0, 21035.0], [155.0, 21040.0], [157.0, 21034.0], [153.0, 21033.0], [156.0, 21038.0], [159.0, 21044.0], [154.0, 21036.5], [152.0, 21035.0], [161.0, 21043.0], [165.0, 21040.0], [166.0, 21042.0], [163.0, 21038.0], [164.0, 21042.0], [167.0, 21033.0], [160.0, 21036.0], [162.0, 21036.0], [175.0, 21036.0], [173.0, 21043.0], [174.0, 21033.5], [171.0, 21038.0], [169.0, 21041.0], [172.0, 21037.0], [168.0, 21035.0], [170.0, 21030.0], [178.0, 21036.0], [181.0, 21037.5], [183.0, 21042.0], [180.0, 21035.0], [177.0, 21038.0], [176.0, 21035.0], [182.0, 21041.0], [179.0, 21037.0], [187.0, 21034.0], [189.0, 21035.0], [191.0, 21040.0], [185.0, 21037.0], [188.0, 21038.0], [186.0, 21033.5], [184.0, 21037.0], [190.0, 21039.0], [195.0, 21040.0], [197.0, 21039.0], [193.0, 21035.0], [199.0, 21036.0], [196.0, 21037.0], [198.0, 21033.0], [194.0, 21038.0], [192.0, 21037.0], [204.0, 21038.0], [206.0, 21039.0], [203.0, 21040.0], [202.0, 21038.0], [205.0, 21038.0], [200.0, 21036.0], [201.0, 21039.5], [207.0, 21034.0], [208.0, 21037.0], [212.0, 21039.0], [213.0, 21034.0], [211.0, 21038.0], [214.0, 21040.0], [215.0, 21036.0], [210.0, 21035.0], [209.0, 21034.5], [218.0, 21035.0], [216.0, 21039.0], [220.0, 21032.0], [223.0, 21038.0], [221.0, 21036.0], [222.0, 21040.0], [217.0, 21031.0], [219.0, 21032.0], [224.0, 21040.0], [230.0, 21042.0], [227.0, 21039.0], [231.0, 21039.0], [228.0, 21036.0], [225.0, 21041.0], [226.0, 21039.5], [238.0, 21040.0], [234.0, 21033.0], [233.0, 21036.0], [237.0, 21029.5], [232.0, 21036.0], [236.0, 21035.0], [235.0, 21036.0], [239.0, 21036.5], [240.0, 21035.0], [246.0, 21033.5], [242.0, 21037.0], [243.0, 21047.0], [241.0, 21036.0], [245.0, 21031.5], [248.0, 21035.0], [253.0, 21042.0], [251.0, 21036.0], [249.0, 21027.0], [256.0, 21041.0], [268.0, 21042.0], [261.0, 21029.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 268.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4002.5, "series": [{"data": [[3.0, 3185.0], [7.0, 284.5], [12.0, 740.5], [13.0, 744.5], [16.0, 740.0], [21.0, 735.0], [25.0, 741.0], [26.0, 733.0], [28.0, 735.5], [29.0, 737.0], [35.0, 735.0], [39.0, 736.0], [43.0, 736.0], [48.0, 234.5], [49.0, 735.0], [52.0, 734.5], [57.0, 733.0], [59.0, 735.0], [60.0, 734.0], [65.0, 735.0], [70.0, 176.0], [71.0, 716.0], [73.0, 176.0], [79.0, 540.0], [78.0, 174.0], [87.0, 173.0], [95.0, 172.0], [97.0, 174.0], [99.0, 173.0], [96.0, 173.0], [100.0, 173.0], [101.0, 173.0], [103.0, 173.0], [102.0, 172.5], [106.0, 173.0], [105.0, 173.0], [104.0, 173.0], [107.0, 172.0], [109.0, 173.0], [110.0, 173.0], [111.0, 173.0], [108.0, 173.0], [112.0, 173.0], [114.0, 173.0], [115.0, 173.0], [113.0, 173.0], [117.0, 173.0], [119.0, 172.0], [118.0, 172.0], [116.0, 173.0], [120.0, 172.0], [121.0, 174.0], [122.0, 173.0], [123.0, 173.0], [126.0, 175.0], [125.0, 174.0], [134.0, 174.0], [135.0, 175.0], [133.0, 176.0], [132.0, 177.0], [130.0, 176.0], [128.0, 173.0], [129.0, 172.0], [136.0, 175.0], [140.0, 173.0], [142.0, 175.0], [138.0, 174.0], [141.0, 175.0], [143.0, 177.0], [139.0, 174.0], [147.0, 176.0], [144.0, 177.0], [149.0, 176.0], [151.0, 175.0], [148.0, 177.0], [146.0, 178.0], [150.0, 182.0], [145.0, 176.0], [158.0, 177.0], [156.0, 176.0], [159.0, 176.0], [154.0, 177.0], [152.0, 175.0], [155.0, 176.0], [157.0, 177.0], [153.0, 177.0], [163.0, 177.0], [161.0, 176.0], [164.0, 176.0], [166.0, 176.0], [162.0, 177.0], [165.0, 177.0], [160.0, 177.0], [167.0, 176.0], [174.0, 177.0], [172.0, 176.0], [171.0, 177.0], [175.0, 177.0], [168.0, 177.0], [173.0, 178.0], [170.0, 177.0], [169.0, 177.0], [181.0, 176.0], [176.0, 177.0], [180.0, 177.0], [177.0, 177.0], [178.0, 177.0], [183.0, 176.0], [179.0, 177.0], [182.0, 177.0], [186.0, 177.0], [188.0, 176.0], [184.0, 177.5], [190.0, 177.0], [185.0, 176.0], [187.0, 178.0], [189.0, 177.0], [191.0, 177.0], [194.0, 177.0], [199.0, 177.0], [197.0, 177.0], [198.0, 178.0], [192.0, 179.0], [195.0, 177.0], [193.0, 176.0], [196.0, 178.0], [207.0, 178.0], [202.0, 178.0], [201.0, 178.0], [200.0, 182.0], [203.0, 178.0], [204.0, 178.0], [206.0, 179.0], [205.0, 178.0], [208.0, 176.0], [211.0, 178.0], [209.0, 176.0], [210.0, 180.0], [215.0, 181.0], [212.0, 178.0], [214.0, 180.0], [213.0, 178.0], [217.0, 178.0], [218.0, 179.0], [216.0, 178.0], [220.0, 180.0], [223.0, 181.0], [221.0, 180.0], [222.0, 177.0], [219.0, 178.0], [227.0, 182.0], [224.0, 185.0], [230.0, 187.0], [226.0, 188.0], [231.0, 292.0], [228.0, 181.0], [225.0, 180.0], [238.0, 178.0], [234.0, 288.0], [233.0, 180.0], [237.0, 286.5], [232.0, 178.0], [236.0, 180.0], [235.0, 176.0], [239.0, 290.0], [240.0, 287.0], [246.0, 256.5], [242.0, 180.0], [243.0, 178.0], [241.0, 190.0], [245.0, 179.5], [248.0, 1182.0], [253.0, 187.0], [251.0, 175.0], [249.0, 1174.0], [256.0, 179.0], [268.0, 180.0], [261.0, 293.0], [1.0, 4002.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[105.0, 0.0], [109.0, 0.0], [135.0, 0.0], [134.0, 0.0], [133.0, 0.0], [132.0, 0.0], [130.0, 0.0], [139.0, 0.0], [136.0, 0.0], [143.0, 0.0], [142.0, 0.0], [151.0, 0.0], [149.0, 0.0], [147.0, 0.0], [150.0, 0.0], [145.0, 0.0], [148.0, 0.0], [146.0, 0.0], [144.0, 0.0], [158.0, 0.0], [155.0, 0.0], [157.0, 0.0], [153.0, 0.0], [156.0, 0.0], [159.0, 0.0], [154.0, 0.0], [152.0, 0.0], [161.0, 0.0], [165.0, 0.0], [166.0, 0.0], [163.0, 0.0], [164.0, 0.0], [167.0, 0.0], [160.0, 0.0], [162.0, 0.0], [175.0, 0.0], [173.0, 0.0], [174.0, 0.0], [171.0, 0.0], [169.0, 0.0], [172.0, 0.0], [168.0, 0.0], [170.0, 0.0], [178.0, 0.0], [181.0, 0.0], [183.0, 0.0], [180.0, 0.0], [177.0, 0.0], [176.0, 0.0], [182.0, 0.0], [179.0, 0.0], [187.0, 0.0], [189.0, 0.0], [191.0, 0.0], [185.0, 0.0], [188.0, 0.0], [186.0, 0.0], [184.0, 0.0], [190.0, 0.0], [195.0, 0.0], [197.0, 0.0], [193.0, 0.0], [199.0, 0.0], [196.0, 0.0], [198.0, 0.0], [194.0, 0.0], [192.0, 0.0], [204.0, 0.0], [206.0, 0.0], [203.0, 0.0], [202.0, 0.0], [205.0, 0.0], [200.0, 0.0], [201.0, 0.0], [207.0, 0.0], [208.0, 0.0], [212.0, 0.0], [213.0, 0.0], [211.0, 0.0], [214.0, 0.0], [215.0, 0.0], [210.0, 0.0], [209.0, 0.0], [218.0, 0.0], [216.0, 0.0], [220.0, 0.0], [223.0, 0.0], [221.0, 0.0], [222.0, 0.0], [217.0, 0.0], [219.0, 0.0], [224.0, 0.0], [230.0, 0.0], [227.0, 0.0], [231.0, 0.0], [228.0, 0.0], [225.0, 0.0], [226.0, 0.0], [238.0, 0.0], [234.0, 0.0], [233.0, 0.0], [237.0, 0.0], [232.0, 0.0], [236.0, 0.0], [235.0, 0.0], [239.0, 0.0], [240.0, 0.0], [246.0, 0.0], [242.0, 0.0], [243.0, 0.0], [241.0, 0.0], [245.0, 0.0], [248.0, 0.0], [253.0, 0.0], [251.0, 0.0], [249.0, 0.0], [256.0, 0.0], [268.0, 0.0], [261.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 268.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 48.5, "minX": 1.72754406E12, "maxY": 212.9, "series": [{"data": [[1.72754562E12, 195.73333333333332], [1.72754502E12, 212.9], [1.72754532E12, 202.38333333333333], [1.72754442E12, 201.76666666666668], [1.72754472E12, 202.26666666666668], [1.72754574E12, 182.28333333333333], [1.72754412E12, 167.95], [1.72754514E12, 184.13333333333333], [1.72754544E12, 174.03333333333333], [1.72754454E12, 183.33333333333334], [1.72754484E12, 185.46666666666667], [1.72754424E12, 182.1], [1.72754526E12, 210.43333333333334], [1.72754556E12, 206.28333333333333], [1.72754586E12, 86.06666666666666], [1.72754466E12, 204.56666666666666], [1.72754496E12, 208.6], [1.72754406E12, 48.5], [1.72754436E12, 202.55], [1.72754538E12, 170.95], [1.72754568E12, 178.8], [1.72754478E12, 178.61666666666667], [1.72754508E12, 177.91666666666666], [1.72754418E12, 182.2], [1.7275458E12, 137.75], [1.72754448E12, 178.68333333333334], [1.7275455E12, 174.46666666666667], [1.7275449E12, 186.06666666666666], [1.7275452E12, 186.15], [1.7275443E12, 180.98333333333332], [1.7275446E12, 182.63333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72754586E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.72754406E12, "maxY": 184.66666666666666, "series": [{"data": [[1.72754562E12, 174.76666666666668], [1.72754502E12, 184.66666666666666], [1.72754532E12, 179.43333333333334], [1.72754442E12, 182.18333333333334], [1.72754472E12, 182.96666666666667], [1.72754574E12, 182.8], [1.72754412E12, 165.73333333333332], [1.72754514E12, 182.16666666666666], [1.72754544E12, 173.28333333333333], [1.72754454E12, 181.28333333333333], [1.72754484E12, 182.76666666666668], [1.72754424E12, 180.35], [1.72754526E12, 182.95], [1.72754556E12, 179.88333333333333], [1.72754586E12, 87.73333333333333], [1.72754466E12, 182.23333333333332], [1.72754496E12, 182.13333333333333], [1.72754406E12, 46.3], [1.72754436E12, 181.23333333333332], [1.72754538E12, 176.2], [1.72754568E12, 182.86666666666667], [1.72754478E12, 181.28333333333333], [1.72754508E12, 181.81666666666666], [1.72754418E12, 180.35], [1.7275458E12, 140.15], [1.72754448E12, 182.08333333333334], [1.7275455E12, 174.15], [1.7275449E12, 182.98333333333332], [1.7275452E12, 183.83333333333334], [1.7275443E12, 180.06666666666666], [1.7275446E12, 180.36666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72754562E12, 24.416666666666668], [1.72754502E12, 31.5], [1.72754532E12, 26.216666666666665], [1.72754442E12, 23.0], [1.72754472E12, 23.0], [1.72754574E12, 1.65], [1.72754514E12, 1.9666666666666666], [1.72754544E12, 0.7333333333333333], [1.72754454E12, 2.05], [1.72754484E12, 2.95], [1.72754424E12, 0.7666666666666667], [1.72754526E12, 12.483333333333333], [1.72754556E12, 11.15], [1.72754466E12, 7.333333333333333], [1.72754496E12, 11.516666666666667], [1.72754436E12, 6.116666666666666], [1.72754538E12, 6.5], [1.72754568E12, 7.766666666666667], [1.72754478E12, 8.633333333333333], [1.72754508E12, 7.783333333333333], [1.72754418E12, 0.5833333333333334], [1.7275458E12, 0.15], [1.72754448E12, 8.1], [1.7275455E12, 0.5666666666666667], [1.7275449E12, 2.8333333333333335], [1.7275452E12, 2.316666666666667], [1.7275443E12, 1.2], [1.7275446E12, 2.2666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72754586E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.72754406E12, "maxY": 184.66666666666666, "series": [{"data": [[1.72754562E12, 174.76666666666668], [1.72754502E12, 184.66666666666666], [1.72754532E12, 179.43333333333334], [1.72754442E12, 182.18333333333334], [1.72754472E12, 182.96666666666667], [1.72754574E12, 182.8], [1.72754412E12, 165.73333333333332], [1.72754514E12, 182.16666666666666], [1.72754544E12, 173.28333333333333], [1.72754454E12, 181.28333333333333], [1.72754484E12, 182.76666666666668], [1.72754424E12, 180.35], [1.72754526E12, 182.95], [1.72754556E12, 179.88333333333333], [1.72754586E12, 87.73333333333333], [1.72754466E12, 182.23333333333332], [1.72754496E12, 182.13333333333333], [1.72754406E12, 46.3], [1.72754436E12, 181.23333333333332], [1.72754538E12, 176.2], [1.72754568E12, 182.86666666666667], [1.72754478E12, 181.28333333333333], [1.72754508E12, 181.81666666666666], [1.72754418E12, 180.35], [1.7275458E12, 140.15], [1.72754448E12, 182.08333333333334], [1.7275455E12, 174.15], [1.7275449E12, 182.98333333333332], [1.7275452E12, 183.83333333333334], [1.7275443E12, 180.06666666666666], [1.7275446E12, 180.36666666666667]], "isOverall": false, "label": "1.1 - POST - /confirmation.php-success", "isController": false}, {"data": [[1.72754562E12, 24.416666666666668], [1.72754502E12, 31.5], [1.72754532E12, 26.216666666666665], [1.72754442E12, 23.0], [1.72754472E12, 23.0], [1.72754574E12, 1.65], [1.72754514E12, 1.9666666666666666], [1.72754544E12, 0.7333333333333333], [1.72754454E12, 2.05], [1.72754484E12, 2.95], [1.72754424E12, 0.7666666666666667], [1.72754526E12, 12.483333333333333], [1.72754556E12, 11.15], [1.72754466E12, 7.333333333333333], [1.72754496E12, 11.516666666666667], [1.72754436E12, 6.116666666666666], [1.72754538E12, 6.5], [1.72754568E12, 7.766666666666667], [1.72754478E12, 8.633333333333333], [1.72754508E12, 7.783333333333333], [1.72754418E12, 0.5833333333333334], [1.7275458E12, 0.15], [1.72754448E12, 8.1], [1.7275455E12, 0.5666666666666667], [1.7275449E12, 2.8333333333333335], [1.7275452E12, 2.316666666666667], [1.7275443E12, 1.2], [1.7275446E12, 2.2666666666666666]], "isOverall": false, "label": "1.1 - POST - /confirmation.php-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72754586E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.72754406E12, "maxY": 184.66666666666666, "series": [{"data": [[1.72754562E12, 174.76666666666668], [1.72754502E12, 184.66666666666666], [1.72754532E12, 179.43333333333334], [1.72754442E12, 182.18333333333334], [1.72754472E12, 182.96666666666667], [1.72754574E12, 182.8], [1.72754412E12, 165.73333333333332], [1.72754514E12, 182.16666666666666], [1.72754544E12, 173.28333333333333], [1.72754454E12, 181.28333333333333], [1.72754484E12, 182.76666666666668], [1.72754424E12, 180.35], [1.72754526E12, 182.95], [1.72754556E12, 179.88333333333333], [1.72754586E12, 87.73333333333333], [1.72754466E12, 182.23333333333332], [1.72754496E12, 182.13333333333333], [1.72754406E12, 46.3], [1.72754436E12, 181.23333333333332], [1.72754538E12, 176.2], [1.72754568E12, 182.86666666666667], [1.72754478E12, 181.28333333333333], [1.72754508E12, 181.81666666666666], [1.72754418E12, 180.35], [1.7275458E12, 140.15], [1.72754448E12, 182.08333333333334], [1.7275455E12, 174.15], [1.7275449E12, 182.98333333333332], [1.7275452E12, 183.83333333333334], [1.7275443E12, 180.06666666666666], [1.7275446E12, 180.36666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72754562E12, 24.416666666666668], [1.72754502E12, 31.5], [1.72754532E12, 26.216666666666665], [1.72754442E12, 23.0], [1.72754472E12, 23.0], [1.72754574E12, 1.65], [1.72754514E12, 1.9666666666666666], [1.72754544E12, 0.7333333333333333], [1.72754454E12, 2.05], [1.72754484E12, 2.95], [1.72754424E12, 0.7666666666666667], [1.72754526E12, 12.483333333333333], [1.72754556E12, 11.15], [1.72754466E12, 7.333333333333333], [1.72754496E12, 11.516666666666667], [1.72754436E12, 6.116666666666666], [1.72754538E12, 6.5], [1.72754568E12, 7.766666666666667], [1.72754478E12, 8.633333333333333], [1.72754508E12, 7.783333333333333], [1.72754418E12, 0.5833333333333334], [1.7275458E12, 0.15], [1.72754448E12, 8.1], [1.7275455E12, 0.5666666666666667], [1.7275449E12, 2.8333333333333335], [1.7275452E12, 2.316666666666667], [1.7275443E12, 1.2], [1.7275446E12, 2.2666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72754586E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

